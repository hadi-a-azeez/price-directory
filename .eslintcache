[{"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\index.js":"1","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\addCategoryAdmin.js":"2","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductDetailed.js":"3","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\categoriesAdmin.js":"4","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductEditAdmin.js":"5","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\Home.js":"6","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\firebase.js":"7","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\components\\TableSize.js":"8","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\Products.js":"9","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductsAdmin.js":"10","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\order.js":"11","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\App.js":"12","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\addOrder.js":"13","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\categoryProducts.js":"14","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\components\\CopyItems.js":"15","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\productAdd.js":"16"},{"size":547,"mtime":1608537086391,"results":"17","hashOfConfig":"18"},{"size":2352,"mtime":1608359040515,"results":"19","hashOfConfig":"18"},{"size":8389,"mtime":1608366951963,"results":"20","hashOfConfig":"18"},{"size":3000,"mtime":1608363636655,"results":"21","hashOfConfig":"18"},{"size":9145,"mtime":1608366635263,"results":"22","hashOfConfig":"18"},{"size":1279,"mtime":1608534153799,"results":"23","hashOfConfig":"18"},{"size":516,"mtime":1606978137132,"results":"24","hashOfConfig":"18"},{"size":1216,"mtime":1608119972870,"results":"25","hashOfConfig":"18"},{"size":5241,"mtime":1608456604885,"results":"26","hashOfConfig":"18"},{"size":5208,"mtime":1608356797398,"results":"27","hashOfConfig":"18"},{"size":1368,"mtime":1608536487188,"results":"28","hashOfConfig":"18"},{"size":1620,"mtime":1608536290892,"results":"29","hashOfConfig":"18"},{"size":5286,"mtime":1608551312818,"results":"30","hashOfConfig":"18"},{"size":3578,"mtime":1608132467171,"results":"31","hashOfConfig":"18"},{"size":2840,"mtime":1608119972869,"results":"32","hashOfConfig":"18"},{"size":9592,"mtime":1608356797399,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1jnw47w",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\index.js",[],["72","73"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\addCategoryAdmin.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductDetailed.js",["74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./productDetailed.module.scss\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { resellerCopy, instagramCopy } from \"../components/CopyItems\";\r\nimport Whatsapp from \"../assets/whatsapp.png\";\r\nimport Instagram from \"../assets/instagram.png\";\r\nimport TableSize from \"../components/TableSize\";\r\n\r\nconst ProductDetailed = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [product, setProduct] = useState([]);\r\n  const [pantVisible, setPantVisible] = useState(\"none\");\r\n  const [topVisible, setTopVisible] = useState(\"none\");\r\n  const history = useHistory();\r\n  const ref = firebase.firestore().collection(\"products\");\r\n  const id = props.match.params.id;\r\n  const [copySuccess, setCopySuccess] = useState(\"\");\r\n  const [copySuccessInsta, setcopySuccessInsta] = useState(\"\");\r\n  let pantSizesArr = [\r\n    { name: \"XS\", length: 26 },\r\n    { name: \"S\", length: 28 },\r\n    { name: \"M\", length: 30 },\r\n    { name: \"L\", length: 32 },\r\n    { name: \"XL\", length: 34 },\r\n    { name: \"XXL\", length: 36 },\r\n  ];\r\n  let topSizesArr = [\r\n    { name: \"XS\", length: 36 },\r\n    { name: \"S\", length: 38 },\r\n    { name: \"M\", length: 40 },\r\n    { name: \"L\", length: 42 },\r\n    { name: \"XL\", length: 44 },\r\n    { name: \"XXL\", length: 46 },\r\n  ];\r\n  //function for copying text to clipboard\r\n  function copyText(textToCopy) {\r\n    let textArea;\r\n\r\n    function isOS() {\r\n      return navigator.userAgent.match(/ipad|iphone/i);\r\n    }\r\n\r\n    function createTextArea(text) {\r\n      textArea = document.createElement(\"textArea\");\r\n      textArea.readOnly = true;\r\n      textArea.contentEditable = true;\r\n      textArea.value = text;\r\n      document.body.appendChild(textArea);\r\n    }\r\n\r\n    function selectText() {\r\n      var range, selection;\r\n\r\n      if (isOS()) {\r\n        range = document.createRange();\r\n        range.selectNodeContents(textArea);\r\n        selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        textArea.setSelectionRange(0, 999999);\r\n      } else {\r\n        textArea.select();\r\n      }\r\n    }\r\n\r\n    function copyTo() {\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(textArea);\r\n    }\r\n\r\n    createTextArea(textToCopy);\r\n    selectText();\r\n    copyTo();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const snapshot = await ref.doc(id).get();\r\n      const data = await snapshot.data();\r\n      await setProduct(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handlePantToggle = () => {\r\n    if (pantVisible === \"none\") {\r\n      setPantVisible(\"block\");\r\n    } else {\r\n      setPantVisible(\"none\");\r\n    }\r\n  };\r\n\r\n  const handleTopToggle = () => {\r\n    if (topVisible === \"none\") {\r\n      setTopVisible(\"block\");\r\n    } else {\r\n      setTopVisible(\"none\");\r\n    }\r\n  };\r\n  const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = product;\r\n  let availableSizesArr = [\r\n    { name: \"XS\", stock: sizeXS },\r\n    { name: \"S\", stock: sizeS },\r\n    { name: \"M\", stock: sizeM },\r\n    { name: \"L\", stock: sizeL },\r\n    { name: \"XL\", stock: sizeXL },\r\n    { name: \"XXL\", stock: sizeXXL },\r\n  ];\r\n  //filter array to size avaialable >0\r\n  let availableSizesFiltered = availableSizesArr.filter(\r\n    (size) => size.stock > 0\r\n  );\r\n\r\n  let arr = [\r\n    { XS: sizeXS },\r\n    { S: sizeS },\r\n    { M: sizeM },\r\n    { L: sizeL },\r\n    { XL: sizeXL },\r\n    { XXL: sizeXXL },\r\n  ];\r\n  let sizeArr = availableSizesFiltered.map((size) => size.name);\r\n  console.log(sizeArr);\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Product</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className={styles.container}>\r\n            <Carousel\r\n              infiniteLoop\r\n              dynamicHeight\r\n              showThumbs={false}\r\n              showStatus={false}\r\n              className={styles.carousel}\r\n            >\r\n              {product.product_image &&\r\n                product.product_image.map((imageNew) => (\r\n                  <div style={{ height: `500px`, backgroundColor: `white` }}>\r\n                    <img\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${imageNew}?alt=media`}\r\n                      className={styles.image}\r\n                      alt=\"image_preview\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </Carousel>\r\n            <div className={styles.details}>\r\n              <h1 className={styles.cod}>{product.product_cod}</h1>\r\n              <div className={styles.badgePrimary}>{product.type}</div>\r\n              <h1 className={styles.price}>{`₹${product.product_price}`}</h1>\r\n              <h1 className={styles.resellerPrice}>\r\n                Reseller Price:\r\n                {` ₹${parseInt(\r\n                  product.product_price - (product.product_price / 100) * 10\r\n                )}`}\r\n              </h1>\r\n              <h1 className={styles.fabric}>{product.fabric}</h1>\r\n              <button\r\n                className={styles.btnWtsp}\r\n                onClick={() => {\r\n                  copyText(resellerCopy(product, sizeArr));\r\n                  setCopySuccess(\"copied!\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Whatsapp}\r\n                  alt=\"whatsapp\"\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  style={{ marginRight: `3px` }}\r\n                />\r\n                Copy For Resellers\r\n              </button>\r\n              {/* show copied text status */}\r\n              <p>{copySuccess}</p>\r\n              <button\r\n                className={styles.btnInstagram}\r\n                onClick={() => {\r\n                  copyText(instagramCopy(product));\r\n                  setcopySuccessInsta(\"copied!\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Instagram}\r\n                  width=\"20px\"\r\n                  alt=\"instagram\"\r\n                  height=\"20px\"\r\n                  style={{ marginRight: `3px` }}\r\n                />\r\n                Copy For Instagram\r\n              </button>\r\n              {/* show copied text status */}\r\n              <p>{copySuccessInsta}</p>\r\n              <div>\r\n                <TableSize\r\n                  display=\"block\"\r\n                  column1=\"Size\"\r\n                  column2=\"Stock\"\r\n                  list={availableSizesFiltered}\r\n                />\r\n              </div>\r\n              <h1 className={styles.fabric}>Size Chart </h1>\r\n              <button className={styles.pantOrTop} onClick={handlePantToggle}>\r\n                Pant\r\n              </button>\r\n              <TableSize\r\n                display={pantVisible}\r\n                column1=\"Size\"\r\n                column2=\"Length\"\r\n                list={pantSizesArr}\r\n              />\r\n              <button className={styles.pantOrTop} onClick={handleTopToggle}>\r\n                Top\r\n              </button>\r\n              <TableSize\r\n                display={topVisible}\r\n                column1=\"Size\"\r\n                column2=\"Length\"\r\n                list={topSizesArr}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: `20px` }} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetailed;\r\n","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\categoriesAdmin.js",["76"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductEditAdmin.js",["77","78","79"],"import { useState, useEffect } from \"react\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport styles from \"./productadd.module.scss\";\r\nimport firebase from \"../firebase\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\n\r\nconst ProductAdmin = (props) => {\r\n  const [product, setProduct] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUpdateLoading, setIsUpdateLoading] = useState(false);\r\n  const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n  const ref = firebase.firestore().collection(\"products\");\r\n  const id = props.match.params.id;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      const snapshot = await ref.doc(id).get();\r\n      const data = await snapshot.data();\r\n      setProduct(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const updateProduct = async () => {\r\n    setIsUpdateLoading(true);\r\n\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\")\r\n      .doc(id)\r\n      .set({ ...product });\r\n    setIsUpdateLoading(false);\r\n    history.push(\"/admin/products\");\r\n  };\r\n\r\n  const deleteProduct = () => {\r\n    setIsDeleteLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\").doc(id).delete();\r\n    setIsDeleteLoading(false);\r\n    history.goBack();\r\n  };\r\n\r\n  // const compressImage = async (event) => {\r\n  //   //compresses image to below 1MB\r\n  //   let imagesFromInput = event.target.files;\r\n  //   const options = {\r\n  //     maxSizeMB: 1,\r\n  //     maxWidthOrHeight: 1280,\r\n  //     useWebWorker: true,\r\n  //   };\r\n  //   try {\r\n  //     for (let i = 0; i < imagesFromInput.length; i++) {\r\n  //       const compressedFile = await imageCompression(\r\n  //         imagesFromInput[i],\r\n  //         options\r\n  //       );\r\n  //       //look here\r\n  //       setProductImages((prevImages) => [...prevImages, compressedFile]);\r\n  //     }\r\n\r\n  //     // setProductImageConverted(URL.createObjectURL(compressedFile));\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  // const imageToServer = async (image) => {\r\n  //   // Upload image to firebase storage\r\n  //   let storageRef = firebase.storage().ref();\r\n  //   let imagesRef = storageRef.child(\"images\");\r\n  //   let imageNames = product.product_image;\r\n  //   // Points to 'images'\r\n  //   for (let i = 0; i < image.length; i++) {\r\n  //     let imageName = uuidv4();\r\n  //     let spaceRef = imagesRef.child(imageName);\r\n  //     let resp = await spaceRef.put(image[i]);\r\n  //     imageNames.push(imageName);\r\n  //   }\r\n  //   return imageNames;\r\n  // };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Product</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className={styles.container}>\r\n            <Carousel\r\n              infiniteLoop\r\n              dynamicHeight\r\n              showThumbs={false}\r\n              showStatus={false}\r\n              className={styles.carousel}\r\n            >\r\n              {product.product_image &&\r\n                product.product_image.map((image, index) => (\r\n                  <div style={{ height: 300, backgroundColor: `white` }}>\r\n                    <img\r\n                      key={index}\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${image}?alt=media`}\r\n                      className={styles.image}\r\n                      alt=\"image_preview\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </Carousel>\r\n            <label>Product cod</label>\r\n            <input\r\n              type=\"text\"\r\n              value={product.product_cod}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, product_cod: e.target.value })\r\n              }\r\n            />\r\n            <label>Product Price</label>\r\n            <input\r\n              type=\"number\"\r\n              value={product.product_price}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, product_price: e.target.value })\r\n              }\r\n            />\r\n            <label>Product Sizes</label>\r\n            <div className={styles.productSizeContainer}>\r\n              <div className={styles.sizeItem}>\r\n                <label>XS</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXS}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({ ...product, sizeXS: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>S</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeS}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeS: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>M</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeM}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeM: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.productSizeContainer}>\r\n              <div className={styles.sizeItem}>\r\n                <label>L</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeL}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>XL</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXL}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeXL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>XXL</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXXL}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeXXL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={updateProduct} className={styles.btnPrimary}>\r\n              {isUpdateLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isUpdateLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Update Product</div>\r\n              )}\r\n            </button>\r\n            <button onClick={deleteProduct} className={styles.btnDanger}>\r\n              {isDeleteLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isDeleteLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Delete Product</div>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductAdmin;\r\n","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\Home.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\firebase.js",[],["80","81"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\components\\TableSize.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\Products.js",["82"],"import { useEffect, useState } from \"react\";\r\nimport styles from \"./products.module.scss\";\r\nimport firebase from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TabHeader from \"../components/tabHeader\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isProductsDisplayed, setIsProductsDisplayed] = useState(false);\r\n  const [isSearchResultLoading, setIsSearchResultLoading] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [lastDocFetched, setLastDocFetched] = useState();\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n  const [isMoreProductsLoading, setIsMoreProductLoading] = useState(false);\r\n  const history = useHistory();\r\n  const db = firebase.firestore();\r\n  const productsRef = db.collection(\"products\").orderBy(\"date\", \"desc\");\r\n\r\n  useEffect(() => {\r\n    setIsProductsDisplayed(false);\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const data = await productsRef.limit(10).get();\r\n      updateProductsState(data);\r\n      setIsProductsDisplayed(true);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const updateProductsState = (data) => {\r\n    const isDataEmpty = data.size === 0;\r\n    if (!isDataEmpty) {\r\n      const lastDoc = data.docs[data.docs.length - 1];\r\n      setLastDocFetched(lastDoc);\r\n      setProducts([\r\n        ...products,\r\n        ...data.docs.map((product) => {\r\n          return { ...product.data(), id: product.id };\r\n        }),\r\n      ]);\r\n    } else {\r\n      setIsEmpty(true);\r\n    }\r\n    setIsMoreProductLoading(false);\r\n  };\r\n\r\n  const fetchMore = async () => {\r\n    setIsMoreProductLoading(true);\r\n    const data = await productsRef.startAfter(lastDocFetched).limit(10).get();\r\n    updateProductsState(data);\r\n  };\r\n\r\n  const doSearch = (e) => {\r\n    setIsProductsDisplayed(false);\r\n    setIsSearchResultLoading(true);\r\n\r\n    const searchTerm = e.target.value.toLowerCase();\r\n    setFilteredProducts(\r\n      products.filter((product) => {\r\n        return product.product_cod.toLowerCase().indexOf(searchTerm) >= 0;\r\n      })\r\n    );\r\n    setIsSearchResultLoading(false);\r\n    if (searchTerm === \"\") {\r\n      setIsProductsDisplayed(true);\r\n    }\r\n  };\r\n\r\n  const StockStatus = (data) => {\r\n    const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = data.data;\r\n    const totalStock = sizeXS + sizeS + sizeM + sizeL + sizeXL + sizeXXL;\r\n    if (totalStock > 0) {\r\n      return <h1 className={styles.InStock}>In Stock</h1>;\r\n    } else return <h1 className={styles.OutOfStock}>Out Of Stock </h1>;\r\n  };\r\n\r\n  const ProductCard = ({ product }) => {\r\n    return (\r\n      <Link\r\n        to={`/product_detailed/${product.id}`}\r\n        key={product.id}\r\n        className={styles.link}\r\n      >\r\n        <div className={styles.card} key={product.id}>\r\n          {\r\n            <img\r\n              src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image[0]}?alt=media`}\r\n              alt=\"product_image`\"\r\n              className={styles.thumbnailImage}\r\n            />\r\n          }\r\n          <div className={styles.details}>\r\n            <h1 className={styles.cod}>{product.product_cod}</h1>\r\n            <h1 className={styles.price}>{`₹${product.product_price}`}</h1>\r\n            <StockStatus data={product} />\r\n          </div>\r\n        </div>{\" \"}\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const SearchResult = () => {\r\n    return (\r\n      <>\r\n        {!isSearchResultLoading &&\r\n          filteredProducts.map((product) => <ProductCard product={product} />)}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n          Home\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search cod here\"\r\n          className={styles.search}\r\n          onChange={(e) => doSearch(e)}\r\n        ></input>\r\n        <TabHeader selected=\"products\" />\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className={styles.container}>\r\n        {isProductsDisplayed ? (\r\n          <>\r\n            {products.map((product) => (\r\n              <ProductCard product={product} />\r\n            ))}\r\n            {!isMoreProductsLoading && !isEmpty && (\r\n              <button className={styles.btnLoadMore} onClick={fetchMore}>\r\n                More products\r\n              </button>\r\n            )}\r\n            {isMoreProductsLoading && <h1>Loading</h1>}\r\n            {isEmpty && <h1>No more products</h1>}\r\n          </>\r\n        ) : (\r\n          <SearchResult />\r\n        )}\r\n      </div>\r\n      <div style={{ marginTop: `20px` }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n",["83","84"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductsAdmin.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\order.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\App.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\addOrder.js",["85"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\categoryProducts.js",["86"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\components\\CopyItems.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\productAdd.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":92,"column":6,"nodeType":"93","endLine":92,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":127,"column":7,"nodeType":"97","messageId":"98","endLine":127,"endColumn":10},{"ruleId":"91","severity":1,"message":"99","line":35,"column":6,"nodeType":"93","endLine":35,"endColumn":18,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"101","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"102","line":7,"column":16,"nodeType":"97","messageId":"98","endLine":7,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":31,"column":6,"nodeType":"93","endLine":31,"endColumn":8,"suggestions":"103"},{"ruleId":"87","replacedBy":"104"},{"ruleId":"89","replacedBy":"105"},{"ruleId":"91","severity":1,"message":"106","line":33,"column":6,"nodeType":"93","endLine":33,"endColumn":8,"suggestions":"107"},{"ruleId":"87","replacedBy":"108"},{"ruleId":"89","replacedBy":"109"},{"ruleId":"95","severity":1,"message":"110","line":28,"column":17,"nodeType":"97","messageId":"98","endLine":28,"endColumn":25},{"ruleId":"91","severity":1,"message":"111","line":28,"column":8,"nodeType":"93","endLine":28,"endColumn":10,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'ref'. Either include them or remove the dependency array.","ArrayExpression",["115"],"no-unused-vars","'arr' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.",["116"],"'imageCompression' is defined but never used.","'uuidv4' is defined but never used.",["117"],["113"],["114"],"React Hook useEffect has missing dependencies: 'productsRef' and 'updateProductsState'. Either include them or remove the dependency array.",["118"],["113"],["114"],"'setOrder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'category' and 'db'. Either include them or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"120","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [id, ref]",{"range":"129","text":"130"},"Update the dependencies array to be: [categories, handleFilter]",{"range":"131","text":"132"},{"range":"133","text":"130"},"Update the dependencies array to be: [productsRef, updateProductsState]",{"range":"134","text":"135"},"Update the dependencies array to be: [category, db]",{"range":"136","text":"137"},[2987,2989],"[id, ref]",[1070,1082],"[categories, handleFilter]",[1243,1245],[1371,1373],"[productsRef, updateProductsState]",[1064,1066],"[category, db]"]