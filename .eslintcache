[{"D:\\Abony Price Directory\\price-directory\\src\\index.js":"1","D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js":"2","D:\\Abony Price Directory\\price-directory\\src\\pages\\categoriesAdmin.js":"3","D:\\Abony Price Directory\\price-directory\\src\\pages\\categoryProducts.js":"4","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js":"5","D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js":"6","D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js":"7","D:\\Abony Price Directory\\price-directory\\src\\pages\\orderDetailed.js":"8","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js":"9","D:\\Abony Price Directory\\price-directory\\src\\pages\\script.js":"10","D:\\Abony Price Directory\\price-directory\\src\\App.js":"11","D:\\Abony Price Directory\\price-directory\\src\\pages\\addOrder.js":"12","D:\\Abony Price Directory\\price-directory\\src\\components\\tabHeader.js":"13","D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js":"14","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductsAdmin.js":"15","D:\\Abony Price Directory\\price-directory\\src\\pages\\addCategoryAdmin.js":"16","D:\\Abony Price Directory\\price-directory\\src\\firebase.js":"17","D:\\Abony Price Directory\\price-directory\\src\\pages\\orders.js":"18","D:\\Abony Price Directory\\price-directory\\src\\components\\useFormLocal.js":"19"},{"size":547,"mtime":1608618634216,"results":"20","hashOfConfig":"21"},{"size":5150,"mtime":1609150323867,"results":"22","hashOfConfig":"21"},{"size":3000,"mtime":1608618634232,"results":"23","hashOfConfig":"21"},{"size":3578,"mtime":1608189167487,"results":"24","hashOfConfig":"21"},{"size":8588,"mtime":1608966740236,"results":"25","hashOfConfig":"21"},{"size":1216,"mtime":1608012459744,"results":"26","hashOfConfig":"21"},{"size":12087,"mtime":1609134445804,"results":"27","hashOfConfig":"21"},{"size":12061,"mtime":1610181790878,"results":"28","hashOfConfig":"21"},{"size":8379,"mtime":1608814935951,"results":"29","hashOfConfig":"21"},{"size":1433,"mtime":1608811497554,"results":"30","hashOfConfig":"21"},{"size":1757,"mtime":1609159851678,"results":"31","hashOfConfig":"21"},{"size":8548,"mtime":1610181821376,"results":"32","hashOfConfig":"21"},{"size":781,"mtime":1608189167425,"results":"33","hashOfConfig":"21"},{"size":2840,"mtime":1608012973093,"results":"34","hashOfConfig":"21"},{"size":5599,"mtime":1608878529815,"results":"35","hashOfConfig":"21"},{"size":2352,"mtime":1608618634232,"results":"36","hashOfConfig":"21"},{"size":516,"mtime":1606994261113,"results":"37","hashOfConfig":"21"},{"size":5161,"mtime":1610089021723,"results":"38","hashOfConfig":"21"},{"size":461,"mtime":1608964344359,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"6qx1r0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"42"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Abony Price Directory\\price-directory\\src\\index.js",[],["94","95"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js",["96","97"],"import { useEffect, useState } from \"react\";\r\nimport styles from \"./products.module.scss\";\r\nimport firebase from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TabHeader from \"../components/tabHeader\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [lastDocFetched, setLastDocFetched] = useState();\r\n  const [isEmpty, setIsEmpty] = useState(false);\r\n  const [isMoreProductsLoading, setIsMoreProductLoading] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const history = useHistory();\r\n  const db = firebase.firestore();\r\n  const productsRef = db.collection(\"products\").orderBy(\"date\", \"desc\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const data = await productsRef.limit(10).get();\r\n      updateProductsState(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const updateProductsState = (data) => {\r\n    const isDataEmpty = data.size === 0;\r\n    if (!isDataEmpty) {\r\n      const lastDoc = data.docs[data.docs.length - 1];\r\n      setLastDocFetched(lastDoc);\r\n      setProducts([\r\n        ...products,\r\n        ...data.docs.map((product) => {\r\n          return { ...product.data(), id: product.id };\r\n        }),\r\n      ]);\r\n    } else {\r\n      setIsEmpty(true);\r\n    }\r\n    setIsMoreProductLoading(false);\r\n  };\r\n\r\n  const fetchMore = async () => {\r\n    setIsMoreProductLoading(true);\r\n    const data = await productsRef.startAfter(lastDocFetched).limit(10).get();\r\n    updateProductsState(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchValue == \"\") {\r\n      setFilteredProducts([]);\r\n    }\r\n  }, [searchValue]);\r\n  const doSearch = async (e) => {\r\n    let searchData = await db\r\n      .collection(\"products\")\r\n      .where(\"product_cod\", \"==\", `PNR${searchValue}`)\r\n      .get();\r\n    searchData.forEach((products) => {\r\n      setFilteredProducts([{ ...products.data(), id: products.id }]);\r\n    });\r\n  };\r\n\r\n  const StockStatus = (data) => {\r\n    const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = data.data;\r\n    const totalStock = [sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL];\r\n    if (totalStock.some((s) => s > 0)) {\r\n      return <h1 className={styles.InStock}>In Stock</h1>;\r\n    } else return <h1 className={styles.OutOfStock}>Out Of Stock </h1>;\r\n  };\r\n\r\n  const ProductCard = ({ product }) => {\r\n    return (\r\n      <Link\r\n        to={`/product_detailed/${product.id}`}\r\n        key={product.id}\r\n        className={styles.link}\r\n      >\r\n        <div className={styles.card} key={product.id}>\r\n          {product.product_image && (\r\n            <img\r\n              src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image[0]}?alt=media`}\r\n              alt=\"product_image`\"\r\n              className={styles.thumbnailImage}\r\n            />\r\n          )}\r\n          <div className={styles.details}>\r\n            <h1 className={styles.cod}>{product.product_cod}</h1>\r\n            <h1 className={styles.price}>{`â‚¹${product.product_price}`}</h1>\r\n            <StockStatus data={product} />\r\n          </div>\r\n        </div>{\" \"}\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n          Home\r\n        </button>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Search cod here\"\r\n          className={styles.search}\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n        />\r\n        <button className={styles.btnHome} onClick={doSearch}>\r\n          Search\r\n        </button>\r\n        <TabHeader selected=\"products\" />\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className={styles.container}>\r\n        {searchValue.length < 1 ? (\r\n          <>\r\n            {products.map((product) => (\r\n              <ProductCard product={product} />\r\n            ))}\r\n            {!isMoreProductsLoading && !isEmpty && (\r\n              <button className={styles.btnLoadMore} onClick={fetchMore}>\r\n                More products\r\n              </button>\r\n            )}\r\n            {isMoreProductsLoading && <h1>Loading</h1>}\r\n            {isEmpty && <h1>No more products</h1>}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {filteredProducts.map((product) => (\r\n              <ProductCard product={product} />\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div style={{ marginTop: `20px` }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n",["98","99"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\categoriesAdmin.js",["100"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport styles from \"./products.module.scss\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport TabHeader from \"../components/tabHeader\";\r\n\r\nconst CategoriesAdmin = () => {\r\n  const [isLoading, setIsLoading] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      setIsLoading(true);\r\n      const db = firebase.firestore();\r\n      const data = await db.collection(\"categories\").get();\r\n      setCategories(\r\n        data.docs.map((category) => {\r\n          return { ...category.data(), id: category.id };\r\n        })\r\n      );\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleFilter(\"Top\");\r\n  }, [categories]);\r\n  const handleFilter = async (cat) => {\r\n    setFiltered(categories.filter((category) => category.type === cat));\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    history.push(\"/admin/add_category\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n          Home\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search cod here\"\r\n          className={styles.search}\r\n          /* onChange={(e) => doSearch(e)} */\r\n        ></input>\r\n        <TabHeader selected=\"categories\" />\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className={styles.container}>\r\n        <select\r\n          name=\"parent_categories\"\r\n          id=\"parent_categories\"\r\n          className={styles.dropdown}\r\n          onChange={(e) => handleFilter(e.target.value)}\r\n        >\r\n          <option value=\"Top\">Top</option>\r\n          <option value=\"Pant\">Pant</option>\r\n        </select>\r\n        {!isLoading &&\r\n          filtered.map((category) => (\r\n            <Link\r\n              to={`/admin/category_products/${category.category}`}\r\n              key={category.id}\r\n              className={styles.link}\r\n            >\r\n              <div className={styles.card}>\r\n                <h1 style={{ fontSize: `22px`, padding: `13px` }}>\r\n                  {category.category}\r\n                </h1>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        <button onClick={handleAddCategory} className={styles.btnFloat}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoriesAdmin;\r\n",["101","102"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\categoryProducts.js",["103"],"import {useState,useEffect} from 'react';\r\nimport firebase from \"../firebase\";\r\nimport styles from \"./products.module.scss\";\r\nimport {Link} from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst CategoryProducts = (props) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const category = props.match.params.category;  \r\n    const db = firebase.firestore(); \r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetchProuducts = async() =>{\r\n            setIsLoading(true);\r\n            const data = await db.collection(\"products\").where(\"category\", \"==\" , category).get();\r\n            setProducts(\r\n                data.docs.map((product) => {\r\n                  return { ...product.data(), id: product.id };\r\n                })\r\n              );\r\n              setIsLoading(false);\r\n        }\r\n        fetchProuducts();\r\n    }, []);\r\n\r\n    const StockStatus = (data) => {\r\n      const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = data.data;\r\n      const totalStock = sizeXS + sizeS + sizeM + sizeL + sizeXL + sizeXXL;\r\n      if (totalStock > 0) {\r\n        return <h1 className={styles.InStock}>In Stock</h1>;\r\n      } else return <h1 className={styles.OutOfStock}>Out Of Stock </h1>;\r\n    };\r\n\r\n    return ( <>\r\n            <div className={styles.header}>            \r\n                <button className={styles.btnBack} onClick={() => history.goBack()}>\r\n                Back\r\n                </button>\r\n                <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n                Home\r\n                </button>\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Search cod here\"\r\n                className={styles.search}\r\n                /* onChange={(e) => doSearch(e)} */\r\n                ></input>\r\n            </div>\r\n            {isLoading ? (\r\n                <div className={styles.loaderwraper}>\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#0278ae\"\r\n                    height={50}\r\n                    width={50}\r\n                    visible={isLoading}\r\n                />\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n          <div className={styles.container}>\r\n          {\r\n            !isLoading &&\r\n            products.map((product) => (\r\n                <Link\r\n                  to={`/product_detailed/${product.id}`}\r\n                  key={product.id}\r\n                  className={styles.link}\r\n                >\r\n                  <div className={styles.card}>\r\n                    <img\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image}?alt=media`}\r\n                      alt=\"product_image`\"\r\n                      className={styles.thumbnailImage}\r\n                    />\r\n                    <div className={styles.details}>\r\n                      <h1 className={styles.cod}>{product.product_cod}</h1>\r\n                      <h1\r\n                        className={styles.price}\r\n                      >{`â‚¹${product.product_price}`}</h1>\r\n                     <StockStatus data={product} />\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))\r\n          }\r\n          </div>\r\n    </> );\r\n}\r\n \r\nexport default CategoryProducts;",["104","105"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js",["106","107","108","109","110","111","112","113","114","115","116","117"],"D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js",["118","119","120","121","122"],"import { useState, useEffect, useRef } from \"react\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport styles from \"./productadd.module.scss\";\r\nimport Placeholder from \"../assets/placeholder.png\";\r\nimport firebase from \"../firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\nimport { useFormLocal } from \"../components/useFormLocal\";\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  Stack,\r\n  Image,\r\n  Button,\r\n  SimpleGrid,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProductAdd = () => {\r\n  const [product_image, setProductImage] = useState([]);\r\n  const [product, setProduct, updateProduct] = useFormLocal({});\r\n  const [isValidationError, setIsValidationError] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const history = useHistory();\r\n  const cancelRef = useRef();\r\n  const fabricsArray = [\r\n    \"Cotton\",\r\n    \"Muslin\",\r\n    \"Rayon\",\r\n    \"Denim\",\r\n    \"Gorjet\",\r\n    \"Linen\",\r\n    \"Cotton mix\",\r\n    \"Linen cotton\",\r\n    \"Schifon\",\r\n  ];\r\n  const typeArray = [\"Top\", \"Pant\", \"Set\"];\r\n  const [categories, setCategories] = useState([]);\r\n  const db = firebase.firestore();\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      setIsLoading(true);\r\n      const db = firebase.firestore();\r\n      const data = await db.collection(\"categories\").get();\r\n      setCategories(\r\n        data.docs.map((category) => {\r\n          return { ...category.data(), id: category.id };\r\n        })\r\n      );\r\n      setIsLoading(false);\r\n      setProduct({ type: \"Top\" });\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  // const validateSubmit = (runSubmit) => {\r\n  //   if (product.product_cod != \"\" || product.product_price != 0) {\r\n  //     runSubmit();\r\n  //   } else setIsValidationError(true);\r\n  // };\r\n  const addProduct = async () => {\r\n    console.log(\"prodcut added\");\r\n    setIsOpen(false);\r\n    setIsLoading(true);\r\n    let imageName = await imageToServer(product_image);\r\n    db.collection(\"products\").add({\r\n      date: Date.now(),\r\n      ...product,\r\n      product_image: imageName,\r\n    });\r\n    setIsLoading(false);\r\n    history.push(\"/admin/products\");\r\n  };\r\n  const deleteImageFromArr = (image) => {\r\n    setProductImage((previmage) =>\r\n      previmage.filter((imageInState) => imageInState.name !== image.name)\r\n    );\r\n  };\r\n\r\n  const validateFields = (addCallback) => {\r\n    if (!product.product_cod || !product.product_price) {\r\n      setIsOpen(false);\r\n      setIsValidationError(true);\r\n    } else {\r\n      setIsValidationError(false);\r\n      setIsOpen(false);\r\n      setIsValidationError(false);\r\n      addCallback();\r\n    }\r\n  };\r\n\r\n  const compressImage = async (event) => {\r\n    //compresses image to below 1MB\r\n    let imagesFromInput = event.target.files;\r\n    const options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1280,\r\n      useWebWorker: true,\r\n    };\r\n    try {\r\n      for (let i = 0; i < imagesFromInput.length; i++) {\r\n        const compressedFile = await imageCompression(\r\n          imagesFromInput[i],\r\n          options\r\n        );\r\n        setProductImage((oldArray) => [...oldArray, compressedFile]);\r\n      }\r\n\r\n      // setProductImageConverted(URL.createObjectURL(compressedFile));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const imageToServer = async (image) => {\r\n    //upload image to firebase storage\r\n    let storageRef = firebase.storage().ref();\r\n    let imagesRef = storageRef.child(\"images\");\r\n    let imageNames = [];\r\n    // Points to 'images'\r\n    for (let i = 0; i < image.length; i++) {\r\n      let imageName = uuidv4();\r\n      let spaceRef = imagesRef.child(imageName);\r\n      let resp = await spaceRef.put(image[i]);\r\n      console.log(resp);\r\n      imageNames.push(imageName);\r\n    }\r\n    return imageNames;\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Add Product</h1>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <SimpleGrid columns={3} spacing={2} mt=\"6\" mb=\"6\" w=\"90%\">\r\n          {product_image.length > 0 ? (\r\n            product_image.map((image, index) => (\r\n              <Image\r\n                key={index}\r\n                style={{ background: \"#212121\" }}\r\n                src={URL.createObjectURL(image)}\r\n                boxSize=\"100px\"\r\n                objectFit=\"cover\"\r\n                alt=\"image_preview\"\r\n                onClick={() => deleteImageFromArr(image)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Image src={Placeholder} boxSize=\"100px\" alt=\"image_preview\" />\r\n          )}\r\n          <label htmlFor=\"file-upload\" className={styles.customFileUpload}>\r\n            +\r\n          </label>\r\n        </SimpleGrid>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file-upload\"\r\n          onChange={(event) => compressImage(event)}\r\n          multiple\r\n        />\r\n        <FormControl id=\"product_cod\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Product cod</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            onChange={updateProduct}\r\n            name=\"product_cod\"\r\n            size=\"lg\"\r\n            value={product.product_cod || \"\"}\r\n          />\r\n        </FormControl>\r\n        <Select\r\n          name=\"type\"\r\n          id=\"type\"\r\n          w=\"90%\"\r\n          size=\"lg\"\r\n          mt=\"4\"\r\n          onChange={updateProduct}\r\n          name=\"type\"\r\n          value={product.type || \"\"}\r\n        >\r\n          {typeArray.map((type, index) => (\r\n            <option value={type} key={index}>\r\n              {type}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <FormControl id=\"product_price\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Product Price</FormLabel>\r\n          <Input\r\n            type=\"number\"\r\n            onChange={updateProduct}\r\n            value={product.product_price || \"\"}\r\n            name=\"product_price\"\r\n            size=\"lg\"\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"product_length\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Product Length</FormLabel>\r\n          <Input\r\n            type=\"number\"\r\n            onChange={updateProduct}\r\n            value={product.product_length || \"\"}\r\n            name=\"product_length\"\r\n            size=\"lg\"\r\n          />\r\n        </FormControl>\r\n        <Select\r\n          name=\"fabric\"\r\n          id=\"fabrics\"\r\n          w=\"90%\"\r\n          size=\"lg\"\r\n          mt=\"4\"\r\n          onChange={updateProduct}\r\n          name=\"fabric\"\r\n          value={product.fabric || \"DEFAULT\"}\r\n        >\r\n          <option value=\"DEFAULT\" disabled>\r\n            Select a fabric\r\n          </option>\r\n          {fabricsArray.map((fabric, index) => (\r\n            <option value={fabric} key={index}>\r\n              {fabric}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <Select\r\n          name=\"categories\"\r\n          id=\"categories\"\r\n          w=\"90%\"\r\n          size=\"lg\"\r\n          mt=\"4\"\r\n          onChange={updateProduct}\r\n          name=\"category\"\r\n          value={product.category || \"DEFAULT\"}\r\n        >\r\n          <option value=\"DEFAULT\" disabled>\r\n            Select a Category\r\n          </option>\r\n          {!isLoading &&\r\n            categories.map((category) => (\r\n              <option value={category.category} key={category.id}>\r\n                {category.category}\r\n              </option>\r\n            ))}\r\n        </Select>\r\n        <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Product Sizes</FormLabel>\r\n\r\n          <Stack direction=\"row\">\r\n            <FormControl id=\"product_sizes\" w=\"90%\">\r\n              <FormLabel>XS</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                onChange={updateProduct}\r\n                name=\"sizeXS\"\r\n                size=\"lg\"\r\n                w=\"70%\"\r\n                value={product.sizeXS || \"\"}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n              <FormLabel>S</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                onChange={updateProduct}\r\n                name=\"sizeS\"\r\n                size=\"lg\"\r\n                w=\"70%\"\r\n                value={product.sizeS || \"\"}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n              <FormLabel>M</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                onChange={updateProduct}\r\n                name=\"sizeM\"\r\n                size=\"lg\"\r\n                w=\"70%\"\r\n                value={product.sizeM || \"\"}\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n\r\n          <Stack direction=\"row\">\r\n            <FormControl id=\"product_sizes\" w=\"90%\">\r\n              <FormLabel>L</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                onChange={updateProduct}\r\n                name=\"sizeL\"\r\n                size=\"lg\"\r\n                w=\"70%\"\r\n                value={product.sizeL || \"\"}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n              <FormLabel>XL</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                onChange={updateProduct}\r\n                name=\"sizeXL\"\r\n                size=\"lg\"\r\n                w=\"70%\"\r\n                value={product.sizeXL || \"\"}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n              <FormLabel>XXL</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                onChange={updateProduct}\r\n                name=\"sizeXXL\"\r\n                size=\"lg\"\r\n                w=\"70%\"\r\n                value={product.sizeXXL || \"\"}\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n        </FormControl>\r\n        {isValidationError && (\r\n          <h1 className={styles.validationError}>\r\n            *Product cod and product price field must be filled\r\n          </h1>\r\n        )}\r\n        <Button\r\n          onClick={() => setIsOpen(true)}\r\n          colorScheme=\"teal\"\r\n          variant=\"solid\"\r\n          size=\"xs\"\r\n          w=\"90%\"\r\n          padding=\"6\"\r\n          mt=\"6\"\r\n          mb=\"6\"\r\n          isLoading={isLoading}\r\n          loadingText=\"Uploading\"\r\n        >\r\n          Add Product\r\n        </Button>\r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={() => setIsOpen(false)}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent w=\"90%\" pos=\"center\">\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                Add Product\r\n              </AlertDialogHeader>\r\n\r\n              <AlertDialogBody>\r\n                Are you sure you want to add this Product ?\r\n              </AlertDialogBody>\r\n\r\n              <AlertDialogFooter>\r\n                <Button ref={cancelRef} onClick={() => setIsOpen(false)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"green\"\r\n                  ml={3}\r\n                  onClick={() => validateFields(addProduct)}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductAdd;\r\n","D:\\Abony Price Directory\\price-directory\\src\\pages\\orderDetailed.js",["123","124","125"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js",["126","127"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./productDetailed.module.scss\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { resellerCopy, instagramCopy } from \"../components/CopyItems\";\r\nimport Whatsapp from \"../assets/whatsapp.png\";\r\nimport Instagram from \"../assets/instagram.png\";\r\nimport TableSize from \"../components/TableSize\";\r\n\r\nconst ProductDetailed = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [product, setProduct] = useState([]);\r\n  const [pantVisible, setPantVisible] = useState(\"none\");\r\n  const [topVisible, setTopVisible] = useState(\"none\");\r\n  const history = useHistory();\r\n  const ref = firebase.firestore().collection(\"products\");\r\n  const id = props.match.params.id;\r\n  const [copySuccess, setCopySuccess] = useState(\"\");\r\n  const [copySuccessInsta, setcopySuccessInsta] = useState(\"\");\r\n  let pantSizesArr = [\r\n    { name: \"XS\", length: 26 },\r\n    { name: \"S\", length: 28 },\r\n    { name: \"M\", length: 30 },\r\n    { name: \"L\", length: 32 },\r\n    { name: \"XL\", length: 34 },\r\n    { name: \"XXL\", length: 36 },\r\n  ];\r\n  let topSizesArr = [\r\n    { name: \"XS\", length: 36 },\r\n    { name: \"S\", length: 38 },\r\n    { name: \"M\", length: 40 },\r\n    { name: \"L\", length: 42 },\r\n    { name: \"XL\", length: 44 },\r\n    { name: \"XXL\", length: 46 },\r\n  ];\r\n  //function for copying text to clipboard\r\n  function copyText(textToCopy) {\r\n    let textArea;\r\n\r\n    function isOS() {\r\n      return navigator.userAgent.match(/ipad|iphone/i);\r\n    }\r\n\r\n    function createTextArea(text) {\r\n      textArea = document.createElement(\"textArea\");\r\n      textArea.readOnly = true;\r\n      textArea.contentEditable = true;\r\n      textArea.value = text;\r\n      document.body.appendChild(textArea);\r\n    }\r\n\r\n    function selectText() {\r\n      var range, selection;\r\n\r\n      if (isOS()) {\r\n        range = document.createRange();\r\n        range.selectNodeContents(textArea);\r\n        selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        textArea.setSelectionRange(0, 999999);\r\n      } else {\r\n        textArea.select();\r\n      }\r\n    }\r\n\r\n    function copyTo() {\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(textArea);\r\n    }\r\n\r\n    createTextArea(textToCopy);\r\n    selectText();\r\n    copyTo();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const snapshot = await ref.doc(id).get();\r\n      const data = snapshot.data();\r\n\r\n      setProduct(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handlePantToggle = () => {\r\n    if (pantVisible === \"none\") {\r\n      setPantVisible(\"block\");\r\n    } else {\r\n      setPantVisible(\"none\");\r\n    }\r\n  };\r\n\r\n  const handleTopToggle = () => {\r\n    if (topVisible === \"none\") {\r\n      setTopVisible(\"block\");\r\n    } else {\r\n      setTopVisible(\"none\");\r\n    }\r\n  };\r\n  const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = product;\r\n  let availableSizesArr = [\r\n    { name: \"XS\", stock: sizeXS },\r\n    { name: \"S\", stock: sizeS },\r\n    { name: \"M\", stock: sizeM },\r\n    { name: \"L\", stock: sizeL },\r\n    { name: \"XL\", stock: sizeXL },\r\n    { name: \"XXL\", stock: sizeXXL },\r\n  ];\r\n  //filter array to size avaialable >0\r\n  let availableSizesFiltered = availableSizesArr.filter(\r\n    (size) => size.stock > 0\r\n  );\r\n\r\n  let arr = [\r\n    { XS: sizeXS },\r\n    { S: sizeS },\r\n    { M: sizeM },\r\n    { L: sizeL },\r\n    { XL: sizeXL },\r\n    { XXL: sizeXXL },\r\n  ];\r\n  let sizeArr = availableSizesFiltered.map((size) => size.name);\r\n  console.log(sizeArr);\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Product</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className={styles.container}>\r\n            <Carousel\r\n              infiniteLoop\r\n              dynamicHeight\r\n              showThumbs={false}\r\n              showStatus={false}\r\n              className={styles.carousel}\r\n            >\r\n              {product.product_image &&\r\n                product.product_image.map((imageNew) => (\r\n                  <div style={{ height: `500px`, backgroundColor: `white` }}>\r\n                    <img\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${imageNew}?alt=media`}\r\n                      className={styles.image}\r\n                      alt=\"image_preview\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </Carousel>\r\n            <div className={styles.details}>\r\n              <h1 className={styles.cod}>{product.product_cod}</h1>\r\n              <div className={styles.badgePrimary}>{product.type}</div>\r\n              <h1 className={styles.price}>{`â‚¹${product.product_price}`}</h1>\r\n              <h1 className={styles.resellerPrice}>\r\n                Reseller Price:\r\n                {` â‚¹${parseInt(\r\n                  product.product_price - (product.product_price / 100) * 10\r\n                )}`}\r\n              </h1>\r\n              <h1 className={styles.fabric}>{product.fabric}</h1>\r\n              <button\r\n                className={styles.btnWtsp}\r\n                onClick={() => {\r\n                  copyText(resellerCopy(product, sizeArr));\r\n                  setCopySuccess(\"copied!\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Whatsapp}\r\n                  alt=\"whatsapp\"\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  style={{ marginRight: `3px` }}\r\n                />\r\n                Copy For Resellers\r\n              </button>\r\n              {/* show copied text status */}\r\n              <p>{copySuccess}</p>\r\n              <button\r\n                className={styles.btnInstagram}\r\n                onClick={() => {\r\n                  copyText(instagramCopy(product));\r\n                  setcopySuccessInsta(\"copied!\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Instagram}\r\n                  width=\"20px\"\r\n                  alt=\"instagram\"\r\n                  height=\"20px\"\r\n                  style={{ marginRight: `3px` }}\r\n                />\r\n                Copy For Instagram\r\n              </button>\r\n              {/* show copied text status */}\r\n              <p>{copySuccessInsta}</p>\r\n              <div>\r\n                <TableSize\r\n                  display=\"block\"\r\n                  column1=\"Size\"\r\n                  column2=\"Stock\"\r\n                  list={availableSizesFiltered}\r\n                />\r\n              </div>\r\n              <h1 className={styles.fabric}>Size Chart </h1>\r\n              <button className={styles.pantOrTop} onClick={handlePantToggle}>\r\n                Pant\r\n              </button>\r\n              <TableSize\r\n                display={pantVisible}\r\n                column1=\"Size\"\r\n                column2=\"Length\"\r\n                list={pantSizesArr}\r\n              />\r\n              <button className={styles.pantOrTop} onClick={handleTopToggle}>\r\n                Top\r\n              </button>\r\n              <TableSize\r\n                display={topVisible}\r\n                column1=\"Size\"\r\n                column2=\"Length\"\r\n                list={topSizesArr}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: `20px` }} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetailed;\r\n",["128","129"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\script.js",["130"],"import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\nconst Script = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    data.length > 0 && console.log(data);\r\n  });\r\n\r\n  const db = firebase.firestore();\r\n\r\n  const getData = async () => {\r\n    const dataFetched = await db.collection(\"products\").get();\r\n    await setData(\r\n      dataFetched.docs.map((product) => {\r\n        return { ...product.data(), id: product.id };\r\n      })\r\n    );\r\n    console.log(data);\r\n  };\r\n  function reg(cod) {\r\n    var numberPattern = /\\d+/g;\r\n    let cln = cod.match(numberPattern).join(\"\");\r\n    var lttr = cod.match(/[a-zA-Z]+/g).join(\"\");\r\n    return lttr + cln;\r\n  }\r\n  const updateData = async () => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      await db\r\n        .collection(\"products\")\r\n        .doc(data[i].id)\r\n        .update({ product_cod: reg(data[i].product_cod) });\r\n    }\r\n    console.log(\"finished\");\r\n  };\r\n  function reg(cod) {\r\n    var numberPattern = /\\d+/g;\r\n    let cln = cod.match(numberPattern).join(\"\");\r\n    var lttr = cod.match(/[a-zA-Z]+/g).join(\"\");\r\n    return lttr + cln;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 onClick={getData}>GET DATA</h1>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <h1 onClick={updateData} style={{ color: \"red\" }}>\r\n        UPDATE DATA\r\n      </h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Script;\r\n","D:\\Abony Price Directory\\price-directory\\src\\App.js",[],["131","132"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\addOrder.js",["133","134"],"D:\\Abony Price Directory\\price-directory\\src\\components\\tabHeader.js",[],["135","136"],"D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductsAdmin.js",["137","138","139","140"],"import { useEffect, useState } from \"react\";\r\nimport styles from \"./products.module.scss\";\r\nimport firebase from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TabHeader from \"../components/tabHeader\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isProductsDisplayed, setIsProductsDisplayed] = useState(false);\r\n  const [isSearchResultLoading, setIsSearchResultLoading] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const history = useHistory();\r\n  const db = firebase.firestore();\r\n\r\n  useEffect(() => {\r\n    setIsProductsDisplayed(false);\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const data = await db\r\n        .collection(\"products\")\r\n        .orderBy(\"date\", \"desc\")\r\n        .get();\r\n      setProducts(\r\n        data.docs.map((product) => {\r\n          return { ...product.data(), id: product.id };\r\n        })\r\n      );\r\n      setIsProductsDisplayed(true);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (searchValue == \"\") {\r\n      setFilteredProducts([]);\r\n    }\r\n  }, [searchValue]);\r\n  const doSearch = async (e) => {\r\n    setIsProductsDisplayed(false);\r\n    setIsSearchResultLoading(true);\r\n    let searchData = await db\r\n      .collection(\"products\")\r\n      .where(\"product_cod\", \"==\", `PNR${searchValue}`)\r\n      .get();\r\n    searchData.forEach((products) => {\r\n      setFilteredProducts([{ ...products.data(), id: products.id }]);\r\n    });\r\n    console.log(filteredProducts);\r\n    setIsSearchResultLoading(false);\r\n  };\r\n\r\n  const StockStatus = (data) => {\r\n    const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = data.data;\r\n    const totalStock = [sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL];\r\n    if (totalStock.some((s) => s > 0)) {\r\n      return <h1 className={styles.InStock}>In Stock</h1>;\r\n    } else return <h1 className={styles.OutOfStock}>Out Of Stock </h1>;\r\n  };\r\n\r\n  const handleFloatingButtonClick = () => {\r\n    history.push(\"/admin/product_add\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n          Home\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search cod here\"\r\n          className={styles.search}\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n        />\r\n        <button className={styles.btnHome} onClick={doSearch}>\r\n          Search\r\n        </button>\r\n        <TabHeader selected=\"products\" />\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className={styles.container}>\r\n        <button className={styles.btnFloat} onClick={handleFloatingButtonClick}>\r\n          +\r\n        </button>\r\n        {searchValue.length < 1 ? (\r\n          products.map((product, index) => (\r\n            <Link\r\n              to={`/admin/product_edit_admin/${product.id}`}\r\n              key={index}\r\n              className={styles.link}\r\n            >\r\n              <div className={styles.card}>\r\n                {product.product_image && (\r\n                  <img\r\n                    src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image[0]}?alt=media`}\r\n                    alt=\"product_image`\"\r\n                    className={styles.thumbnailImage}\r\n                  />\r\n                )}\r\n                <div className={styles.details}>\r\n                  <h1 className={styles.cod}>{product.product_cod}</h1>\r\n                  <h1\r\n                    className={styles.price}\r\n                  >{`â‚¹${product.product_price}`}</h1>\r\n                  <StockStatus data={product} />\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <>\r\n            {filteredProducts.map((product, index) => (\r\n              <Link\r\n                to={`/admin/product_edit_admin/${product.id}`}\r\n                key={index}\r\n                className={styles.link}\r\n              >\r\n                <div className={styles.card}>\r\n                  {product.product_image && (\r\n                    <img\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image[0]}?alt=media`}\r\n                      alt=\"product_image`\"\r\n                      className={styles.thumbnailImage}\r\n                    />\r\n                  )}\r\n                  <div className={styles.details}>\r\n                    <h1 className={styles.cod}>{product.product_cod}</h1>\r\n                    <h1\r\n                      className={styles.price}\r\n                    >{`â‚¹${product.product_price}`}</h1>\r\n                    <StockStatus data={product} />\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div style={{ marginTop: 20 }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","D:\\Abony Price Directory\\price-directory\\src\\pages\\addCategoryAdmin.js",[],["141","142"],"D:\\Abony Price Directory\\price-directory\\src\\firebase.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\orders.js",["143","144","145","146"],"import { useEffect, useState } from \"react\";\r\nimport styles from \"./products.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport { ChakraProvider, Flex, Image, Text, Container } from \"@chakra-ui/react\";\r\n\r\nconst Order = () => {\r\n  const history = useHistory();\r\n  const db = firebase.firestore();\r\n  const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filteredOrders, setFilteredOrders] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      setIsLoading(true);\r\n      const data = await db.collection(\"orders\").orderBy(\"date\", \"desc\").get();\r\n      setOrders(\r\n        data.docs.map((order) => {\r\n          return { ...order.data(), id: order.id };\r\n        })\r\n      );\r\n      setIsLoading(false);\r\n    };\r\n    fetchOrders();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (searchValue == \"\") {\r\n      setFilteredOrders([]);\r\n    }\r\n  }, [searchValue]);\r\n  const doSearch = async (e) => {\r\n    let searchData = await db\r\n      .collection(\"orders\")\r\n      .where(\"order_no\", \"==\", parseInt(searchValue))\r\n      .get();\r\n    console.log(searchData);\r\n    searchData.forEach((products) => {\r\n      setFilteredOrders([{ ...products.data(), id: products.id }]);\r\n    });\r\n    console.log(filteredOrders);\r\n  };\r\n  const OrderCard = ({ order }) => {\r\n    return (\r\n      <Link to={`/order_detailed/${order.id}`} className={styles.link}>\r\n        <Flex\r\n          justifyContent=\"flex-start\"\r\n          width=\"100%\"\r\n          backgroundColor=\"white\"\r\n          borderRadius={10}\r\n          m={2}\r\n          boxShadow=\"lg\"\r\n        >\r\n          {order.product_image && (\r\n            <Image\r\n              height=\"120px\"\r\n              width=\"140px\"\r\n              borderRadius=\"10px\"\r\n              src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${order.product_image}?alt=media`}\r\n              m={2}\r\n              objectFit=\"cover\"\r\n            />\r\n          )}\r\n          <Flex\r\n            flexDirection=\"column\"\r\n            width=\"70%\"\r\n            m={2}\r\n            justifyContent=\"flex-start\"\r\n          >\r\n            <Text fontWeight=\"bold\" textAlign=\"left\" fontSize=\"xl\">\r\n              {order.customer_name}\r\n            </Text>\r\n            <Text fontSize=\"md\">{order.product_cod}</Text>\r\n            <Text fontWeight=\"bold\" fontStyle=\"italic\" fontSize=\"md\">\r\n              â‚¹{order.product_price}\r\n            </Text>\r\n            <Text fontWeight=\"bold\" fontSize=\"2xl\" color=\"red.500\">\r\n              {order.order_no}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Link>\r\n    );\r\n  };\r\n  const OrderCCard = ({ order }) => {\r\n    return (\r\n      <Link to={`/order_detailed/${order.id}`} className={styles.link}>\r\n        <div className={styles.card}>\r\n          {order.product_image && (\r\n            <img\r\n              src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${order.product_image}?alt=media`}\r\n              alt=\"product_image`\"\r\n              className={styles.thumbnailImage}\r\n            />\r\n          )}\r\n          <div className={styles.details}>\r\n            <h1 className={styles.cod}>{order.product_cod}</h1>\r\n            <h1 className={styles.cod}>{order.customer_name}</h1>\r\n            <h1 className={styles.price}>{`â‚¹${order.product_price}`}</h1>\r\n          </div>\r\n        </div>{\" \"}\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n          Home\r\n        </button>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Search cod here\"\r\n          className={styles.search}\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n        />\r\n        <button className={styles.btnHome} onClick={doSearch}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className={styles.container}>\r\n        <button\r\n          className={styles.btnFloat}\r\n          onClick={() => history.push(\"/add_order\")}\r\n        >\r\n          +\r\n        </button>\r\n        {searchValue.length < 1 ? (\r\n          <Container p={0}>\r\n            {orders.map((order) => (\r\n              <OrderCard order={order} key={order.date} />\r\n            ))}\r\n          </Container>\r\n        ) : (\r\n          <Container p={0}>\r\n            {filteredOrders.map((order) => (\r\n              <OrderCard order={order} key={order.date} />\r\n            ))}\r\n          </Container>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","D:\\Abony Price Directory\\price-directory\\src\\components\\useFormLocal.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":30,"column":6,"nodeType":"153","endLine":30,"endColumn":8,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":56,"column":21,"nodeType":"157","messageId":"158","endLine":56,"endColumn":23},{"ruleId":"147","replacedBy":"159"},{"ruleId":"149","replacedBy":"160"},{"ruleId":"151","severity":1,"message":"161","line":35,"column":6,"nodeType":"153","endLine":35,"endColumn":18,"suggestions":"162"},{"ruleId":"147","replacedBy":"163"},{"ruleId":"149","replacedBy":"164"},{"ruleId":"151","severity":1,"message":"165","line":28,"column":8,"nodeType":"153","endLine":28,"endColumn":10,"suggestions":"166"},{"ruleId":"147","replacedBy":"167"},{"ruleId":"149","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":7,"column":16,"nodeType":"171","messageId":"172","endLine":7,"endColumn":22},{"ruleId":"169","severity":1,"message":"173","line":16,"column":3,"nodeType":"171","messageId":"172","endLine":16,"endColumn":9},{"ruleId":"169","severity":1,"message":"174","line":18,"column":3,"nodeType":"171","messageId":"172","endLine":18,"endColumn":8},{"ruleId":"169","severity":1,"message":"175","line":19,"column":3,"nodeType":"171","messageId":"172","endLine":19,"endColumn":9},{"ruleId":"169","severity":1,"message":"176","line":20,"column":3,"nodeType":"171","messageId":"172","endLine":20,"endColumn":13},{"ruleId":"169","severity":1,"message":"177","line":21,"column":3,"nodeType":"171","messageId":"172","endLine":21,"endColumn":14},{"ruleId":"169","severity":1,"message":"178","line":22,"column":3,"nodeType":"171","messageId":"172","endLine":22,"endColumn":18},{"ruleId":"169","severity":1,"message":"179","line":23,"column":3,"nodeType":"171","messageId":"172","endLine":23,"endColumn":20},{"ruleId":"169","severity":1,"message":"180","line":24,"column":3,"nodeType":"171","messageId":"172","endLine":24,"endColumn":20},{"ruleId":"169","severity":1,"message":"181","line":25,"column":3,"nodeType":"171","messageId":"172","endLine":25,"endColumn":21},{"ruleId":"169","severity":1,"message":"182","line":26,"column":3,"nodeType":"171","messageId":"172","endLine":26,"endColumn":21},{"ruleId":"151","severity":1,"message":"183","line":47,"column":6,"nodeType":"153","endLine":47,"endColumn":8,"suggestions":"184"},{"ruleId":"169","severity":1,"message":"185","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":14},{"ruleId":"151","severity":1,"message":"186","line":66,"column":6,"nodeType":"153","endLine":66,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":199,"column":11,"nodeType":"190","endLine":199,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":235,"column":11,"nodeType":"190","endLine":235,"endColumn":24},{"ruleId":"188","severity":1,"message":"189","line":254,"column":11,"nodeType":"190","endLine":254,"endColumn":26},{"ruleId":"169","severity":1,"message":"191","line":34,"column":10,"nodeType":"171","messageId":"172","endLine":34,"endColumn":21},{"ruleId":"151","severity":1,"message":"192","line":65,"column":6,"nodeType":"153","endLine":65,"endColumn":8,"suggestions":"193"},{"ruleId":"169","severity":1,"message":"194","line":70,"column":11,"nodeType":"171","messageId":"172","endLine":70,"endColumn":17},{"ruleId":"151","severity":1,"message":"195","line":93,"column":6,"nodeType":"153","endLine":93,"endColumn":8,"suggestions":"196"},{"ruleId":"169","severity":1,"message":"197","line":128,"column":7,"nodeType":"171","messageId":"172","endLine":128,"endColumn":10},{"ruleId":"147","replacedBy":"198"},{"ruleId":"149","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":36,"column":12,"nodeType":"171","messageId":"202","endLine":36,"endColumn":15},{"ruleId":"147","replacedBy":"203"},{"ruleId":"149","replacedBy":"204"},{"ruleId":"151","severity":1,"message":"205","line":45,"column":6,"nodeType":"153","endLine":45,"endColumn":8,"suggestions":"206"},{"ruleId":"169","severity":1,"message":"207","line":110,"column":9,"nodeType":"171","messageId":"172","endLine":110,"endColumn":13},{"ruleId":"147","replacedBy":"208"},{"ruleId":"149","replacedBy":"209"},{"ruleId":"169","severity":1,"message":"210","line":13,"column":10,"nodeType":"171","messageId":"172","endLine":13,"endColumn":29},{"ruleId":"169","severity":1,"message":"211","line":14,"column":10,"nodeType":"171","messageId":"172","endLine":14,"endColumn":31},{"ruleId":"151","severity":1,"message":"212","line":38,"column":6,"nodeType":"153","endLine":38,"endColumn":8,"suggestions":"213"},{"ruleId":"155","severity":1,"message":"156","line":40,"column":21,"nodeType":"157","messageId":"158","endLine":40,"endColumn":23},{"ruleId":"147","replacedBy":"214"},{"ruleId":"149","replacedBy":"215"},{"ruleId":"169","severity":1,"message":"216","line":9,"column":10,"nodeType":"171","messageId":"172","endLine":9,"endColumn":24},{"ruleId":"151","severity":1,"message":"212","line":31,"column":6,"nodeType":"153","endLine":31,"endColumn":8,"suggestions":"217"},{"ruleId":"155","severity":1,"message":"156","line":33,"column":21,"nodeType":"157","messageId":"158","endLine":33,"endColumn":23},{"ruleId":"169","severity":1,"message":"218","line":90,"column":9,"nodeType":"171","messageId":"172","endLine":90,"endColumn":19},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'productsRef' and 'updateProductsState'. Either include them or remove the dependency array.","ArrayExpression",["221"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["219"],["220"],"React Hook useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.",["222"],["219"],["220"],"React Hook useEffect has missing dependencies: 'category' and 'db'. Either include them or remove the dependency array.",["223"],["219"],["220"],"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","'SimpleGrid' is defined but never used.","'AlertDialog' is defined but never used.","'AlertDialogBody' is defined but never used.","'AlertDialogFooter' is defined but never used.","'AlertDialogHeader' is defined but never used.","'AlertDialogContent' is defined but never used.","'AlertDialogOverlay' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'ref', and 'setProduct'. Either include them or remove the dependency array.",["224"],"'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'setProduct'. Either include it or remove the dependency array.",["225"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'orderStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'ref', and 'setOrder'. Either include them or remove the dependency array.",["226"],"'update' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'ref'. Either include them or remove the dependency array.",["227"],"'arr' is assigned a value but never used.",["219"],["220"],"no-redeclare","'reg' is already defined.","redeclared",["219"],["220"],"React Hook useEffect has a missing dependency: 'setOrder'. Either include it or remove the dependency array.",["228"],"'resp' is assigned a value but never used.",["219"],["220"],"'isProductsDisplayed' is assigned a value but never used.","'isSearchResultLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["229"],["219"],["220"],"'ChakraProvider' is defined but never used.",["230"],"'OrderCCard' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"247","fix":"249"},"Update the dependencies array to be: [productsRef, updateProductsState]",{"range":"250","text":"251"},"Update the dependencies array to be: [categories, handleFilter]",{"range":"252","text":"253"},"Update the dependencies array to be: [category, db]",{"range":"254","text":"255"},"Update the dependencies array to be: [id, ref, setProduct]",{"range":"256","text":"257"},"Update the dependencies array to be: [setProduct]",{"range":"258","text":"259"},"Update the dependencies array to be: [id, ref, setOrder]",{"range":"260","text":"261"},"Update the dependencies array to be: [id, ref]",{"range":"262","text":"263"},"Update the dependencies array to be: [setOrder]",{"range":"264","text":"265"},"Update the dependencies array to be: [db]",{"range":"266","text":"267"},{"range":"268","text":"267"},[1201,1203],"[productsRef, updateProductsState]",[1070,1082],"[categories, handleFilter]",[1064,1066],"[category, db]",[1524,1526],"[id, ref, setProduct]",[1960,1962],"[setProduct]",[2015,2017],"[id, ref, setOrder]",[2977,2979],"[id, ref]",[1350,1352],"[setOrder]",[1329,1331],"[db]",[1089,1091]]