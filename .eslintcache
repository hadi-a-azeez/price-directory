[{"D:\\Abony Price Directory\\price-directory\\src\\index.js":"1","D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js":"2","D:\\Abony Price Directory\\price-directory\\src\\pages\\categoriesAdmin.js":"3","D:\\Abony Price Directory\\price-directory\\src\\pages\\categoryProducts.js":"4","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js":"5","D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js":"6","D:\\Abony Price Directory\\price-directory\\src\\components\\useForm.js":"7","D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js":"8","D:\\Abony Price Directory\\price-directory\\src\\pages\\orderDetailed.js":"9","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js":"10","D:\\Abony Price Directory\\price-directory\\src\\pages\\script.js":"11","D:\\Abony Price Directory\\price-directory\\src\\App.js":"12","D:\\Abony Price Directory\\price-directory\\src\\pages\\addOrder.js":"13","D:\\Abony Price Directory\\price-directory\\src\\components\\tabHeader.js":"14","D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js":"15","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductsAdmin.js":"16","D:\\Abony Price Directory\\price-directory\\src\\pages\\addCategoryAdmin.js":"17"},{"size":547,"mtime":1608618634216,"results":"18","hashOfConfig":"19"},{"size":5486,"mtime":1608878537060,"results":"20","hashOfConfig":"19"},{"size":3000,"mtime":1608618634232,"results":"21","hashOfConfig":"19"},{"size":3578,"mtime":1608189167487,"results":"22","hashOfConfig":"19"},{"size":8573,"mtime":1608792211972,"results":"23","hashOfConfig":"19"},{"size":1216,"mtime":1608012459744,"results":"24","hashOfConfig":"19"},{"size":456,"mtime":1608789746676,"results":"25","hashOfConfig":"19"},{"size":11801,"mtime":1608879379097,"results":"26","hashOfConfig":"19"},{"size":10782,"mtime":1608799470241,"results":"27","hashOfConfig":"19"},{"size":8379,"mtime":1608814935951,"results":"28","hashOfConfig":"19"},{"size":1433,"mtime":1608811497554,"results":"29","hashOfConfig":"19"},{"size":1793,"mtime":1608811553136,"results":"30","hashOfConfig":"19"},{"size":6605,"mtime":1608707557930,"results":"31","hashOfConfig":"19"},{"size":781,"mtime":1608189167425,"results":"32","hashOfConfig":"19"},{"size":2840,"mtime":1608012973093,"results":"33","hashOfConfig":"19"},{"size":5599,"mtime":1608878529815,"results":"34","hashOfConfig":"19"},{"size":2352,"mtime":1608618634232,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"6qx1r0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Abony Price Directory\\price-directory\\src\\index.js",[],["78","79"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js",["80","81","82","83"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\categoriesAdmin.js",["84"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport styles from \"./products.module.scss\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport TabHeader from \"../components/tabHeader\";\r\n\r\nconst CategoriesAdmin = () => {\r\n  const [isLoading, setIsLoading] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      setIsLoading(true);\r\n      const db = firebase.firestore();\r\n      const data = await db.collection(\"categories\").get();\r\n      setCategories(\r\n        data.docs.map((category) => {\r\n          return { ...category.data(), id: category.id };\r\n        })\r\n      );\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleFilter(\"Top\");\r\n  }, [categories]);\r\n  const handleFilter = async (cat) => {\r\n    setFiltered(categories.filter((category) => category.type === cat));\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    history.push(\"/admin/add_category\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n          Home\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search cod here\"\r\n          className={styles.search}\r\n          /* onChange={(e) => doSearch(e)} */\r\n        ></input>\r\n        <TabHeader selected=\"categories\" />\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className={styles.container}>\r\n        <select\r\n          name=\"parent_categories\"\r\n          id=\"parent_categories\"\r\n          className={styles.dropdown}\r\n          onChange={(e) => handleFilter(e.target.value)}\r\n        >\r\n          <option value=\"Top\">Top</option>\r\n          <option value=\"Pant\">Pant</option>\r\n        </select>\r\n        {!isLoading &&\r\n          filtered.map((category) => (\r\n            <Link\r\n              to={`/admin/category_products/${category.category}`}\r\n              key={category.id}\r\n              className={styles.link}\r\n            >\r\n              <div className={styles.card}>\r\n                <h1 style={{ fontSize: `22px`, padding: `13px` }}>\r\n                  {category.category}\r\n                </h1>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        <button onClick={handleAddCategory} className={styles.btnFloat}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoriesAdmin;\r\n",["85","86"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\categoryProducts.js",["87"],"import {useState,useEffect} from 'react';\r\nimport firebase from \"../firebase\";\r\nimport styles from \"./products.module.scss\";\r\nimport {Link} from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst CategoryProducts = (props) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const category = props.match.params.category;  \r\n    const db = firebase.firestore(); \r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetchProuducts = async() =>{\r\n            setIsLoading(true);\r\n            const data = await db.collection(\"products\").where(\"category\", \"==\" , category).get();\r\n            setProducts(\r\n                data.docs.map((product) => {\r\n                  return { ...product.data(), id: product.id };\r\n                })\r\n              );\r\n              setIsLoading(false);\r\n        }\r\n        fetchProuducts();\r\n    }, []);\r\n\r\n    const StockStatus = (data) => {\r\n      const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = data.data;\r\n      const totalStock = sizeXS + sizeS + sizeM + sizeL + sizeXL + sizeXXL;\r\n      if (totalStock > 0) {\r\n        return <h1 className={styles.InStock}>In Stock</h1>;\r\n      } else return <h1 className={styles.OutOfStock}>Out Of Stock </h1>;\r\n    };\r\n\r\n    return ( <>\r\n            <div className={styles.header}>            \r\n                <button className={styles.btnBack} onClick={() => history.goBack()}>\r\n                Back\r\n                </button>\r\n                <button className={styles.btnHome} onClick={() => history.push(\"/\")}>\r\n                Home\r\n                </button>\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Search cod here\"\r\n                className={styles.search}\r\n                /* onChange={(e) => doSearch(e)} */\r\n                ></input>\r\n            </div>\r\n            {isLoading ? (\r\n                <div className={styles.loaderwraper}>\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#0278ae\"\r\n                    height={50}\r\n                    width={50}\r\n                    visible={isLoading}\r\n                />\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n          <div className={styles.container}>\r\n          {\r\n            !isLoading &&\r\n            products.map((product) => (\r\n                <Link\r\n                  to={`/product_detailed/${product.id}`}\r\n                  key={product.id}\r\n                  className={styles.link}\r\n                >\r\n                  <div className={styles.card}>\r\n                    <img\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image}?alt=media`}\r\n                      alt=\"product_image`\"\r\n                      className={styles.thumbnailImage}\r\n                    />\r\n                    <div className={styles.details}>\r\n                      <h1 className={styles.cod}>{product.product_cod}</h1>\r\n                      <h1\r\n                        className={styles.price}\r\n                      >{`₹${product.product_price}`}</h1>\r\n                     <StockStatus data={product} />\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))\r\n          }\r\n          </div>\r\n    </> );\r\n}\r\n \r\nexport default CategoryProducts;","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js",["88","89","90","91","92","93","94","95","96","97","98","99"],"import { useState, useEffect } from \"react\";\r\nimport { useForm } from \"../components/useForm\";\r\nimport styles from \"./productadd.module.scss\";\r\nimport firebase from \"../firebase\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  Stack,\r\n  Image,\r\n  Button,\r\n  SimpleGrid,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProductAdmin = (props) => {\r\n  const [product, setProduct, updateProduct] = useForm({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUpdateLoading, setIsUpdateLoading] = useState(false);\r\n  const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n  const ref = firebase.firestore().collection(\"products\");\r\n  const id = props.match.params.id;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      const snapshot = await ref.doc(id).get();\r\n      const data = await snapshot.data();\r\n      setProduct(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const updateProductServer = async () => {\r\n    setIsUpdateLoading(true);\r\n\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\")\r\n      .doc(id)\r\n      .set({ ...product });\r\n    setIsUpdateLoading(false);\r\n    history.push(\"/admin/products\");\r\n  };\r\n\r\n  const deleteProduct = () => {\r\n    setIsDeleteLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\").doc(id).delete();\r\n    setIsDeleteLoading(false);\r\n    history.goBack();\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Product</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className={styles.container}>\r\n            <Carousel\r\n              infiniteLoop\r\n              dynamicHeight\r\n              showThumbs={false}\r\n              showStatus={false}\r\n              className={styles.carousel}\r\n            >\r\n              {product.product_image &&\r\n                product.product_image.map((image, index) => (\r\n                  <div\r\n                    style={{ height: 300, backgroundColor: `white` }}\r\n                    key={index}\r\n                  >\r\n                    <img\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${image}?alt=media`}\r\n                      className={styles.image}\r\n                      alt=\"image_preview\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </Carousel>\r\n            <FormControl id=\"product_cod\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Product cod</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                value={product.product_cod}\r\n                size=\"lg\"\r\n                name=\"product_cod\"\r\n                onChange={updateProduct}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"product_price\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Product Price</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                size=\"lg\"\r\n                name=\"product_price\"\r\n                value={product.product_price}\r\n                onChange={updateProduct}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"product_length\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Product Length</FormLabel>\r\n              <Input\r\n                type=\"number\"\r\n                size=\"lg\"\r\n                name=\"product_length\"\r\n                value={product.product_length}\r\n                onChange={updateProduct}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Product Sizes</FormLabel>\r\n\r\n              <Stack direction=\"row\">\r\n                <FormControl id=\"product_sizes\" w=\"90%\">\r\n                  <FormLabel>XS</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    onChange={updateProduct}\r\n                    name=\"sizeXS\"\r\n                    size=\"lg\"\r\n                    w=\"70%\"\r\n                    value={product.sizeXS || \"\"}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n                  <FormLabel>S</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    onChange={updateProduct}\r\n                    name=\"sizeS\"\r\n                    size=\"lg\"\r\n                    w=\"70%\"\r\n                    value={product.sizeS || \"\"}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n                  <FormLabel>M</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    onChange={updateProduct}\r\n                    name=\"sizeM\"\r\n                    size=\"lg\"\r\n                    w=\"70%\"\r\n                    value={product.sizeM || \"\"}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n\r\n              <Stack direction=\"row\">\r\n                <FormControl id=\"product_sizes\" w=\"90%\">\r\n                  <FormLabel>L</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    onChange={updateProduct}\r\n                    name=\"sizeL\"\r\n                    size=\"lg\"\r\n                    w=\"70%\"\r\n                    value={product.sizeL || \"\"}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n                  <FormLabel>XL</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    onChange={updateProduct}\r\n                    name=\"sizeXL\"\r\n                    size=\"lg\"\r\n                    w=\"70%\"\r\n                    value={product.sizeXL || \"\"}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"product_sizes\" w=\"90%\" mt=\"2\">\r\n                  <FormLabel>XXL</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    onChange={updateProduct}\r\n                    name=\"sizeXXL\"\r\n                    size=\"lg\"\r\n                    w=\"70%\"\r\n                    value={product.sizeXXL || \"\"}\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n            </FormControl>\r\n            <button onClick={updateProductServer} className={styles.btnPrimary}>\r\n              {isUpdateLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isUpdateLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Update Product</div>\r\n              )}\r\n            </button>\r\n            <button onClick={deleteProduct} className={styles.btnDanger}>\r\n              {isDeleteLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isDeleteLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Delete Product</div>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductAdmin;\r\n","D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js",[],"D:\\Abony Price Directory\\price-directory\\src\\components\\useForm.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js",["100","101","102","103","104"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\orderDetailed.js",["105","106","107"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js",["108","109"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./productDetailed.module.scss\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { resellerCopy, instagramCopy } from \"../components/CopyItems\";\r\nimport Whatsapp from \"../assets/whatsapp.png\";\r\nimport Instagram from \"../assets/instagram.png\";\r\nimport TableSize from \"../components/TableSize\";\r\n\r\nconst ProductDetailed = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [product, setProduct] = useState([]);\r\n  const [pantVisible, setPantVisible] = useState(\"none\");\r\n  const [topVisible, setTopVisible] = useState(\"none\");\r\n  const history = useHistory();\r\n  const ref = firebase.firestore().collection(\"products\");\r\n  const id = props.match.params.id;\r\n  const [copySuccess, setCopySuccess] = useState(\"\");\r\n  const [copySuccessInsta, setcopySuccessInsta] = useState(\"\");\r\n  let pantSizesArr = [\r\n    { name: \"XS\", length: 26 },\r\n    { name: \"S\", length: 28 },\r\n    { name: \"M\", length: 30 },\r\n    { name: \"L\", length: 32 },\r\n    { name: \"XL\", length: 34 },\r\n    { name: \"XXL\", length: 36 },\r\n  ];\r\n  let topSizesArr = [\r\n    { name: \"XS\", length: 36 },\r\n    { name: \"S\", length: 38 },\r\n    { name: \"M\", length: 40 },\r\n    { name: \"L\", length: 42 },\r\n    { name: \"XL\", length: 44 },\r\n    { name: \"XXL\", length: 46 },\r\n  ];\r\n  //function for copying text to clipboard\r\n  function copyText(textToCopy) {\r\n    let textArea;\r\n\r\n    function isOS() {\r\n      return navigator.userAgent.match(/ipad|iphone/i);\r\n    }\r\n\r\n    function createTextArea(text) {\r\n      textArea = document.createElement(\"textArea\");\r\n      textArea.readOnly = true;\r\n      textArea.contentEditable = true;\r\n      textArea.value = text;\r\n      document.body.appendChild(textArea);\r\n    }\r\n\r\n    function selectText() {\r\n      var range, selection;\r\n\r\n      if (isOS()) {\r\n        range = document.createRange();\r\n        range.selectNodeContents(textArea);\r\n        selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        textArea.setSelectionRange(0, 999999);\r\n      } else {\r\n        textArea.select();\r\n      }\r\n    }\r\n\r\n    function copyTo() {\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(textArea);\r\n    }\r\n\r\n    createTextArea(textToCopy);\r\n    selectText();\r\n    copyTo();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const snapshot = await ref.doc(id).get();\r\n      const data = snapshot.data();\r\n\r\n      setProduct(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handlePantToggle = () => {\r\n    if (pantVisible === \"none\") {\r\n      setPantVisible(\"block\");\r\n    } else {\r\n      setPantVisible(\"none\");\r\n    }\r\n  };\r\n\r\n  const handleTopToggle = () => {\r\n    if (topVisible === \"none\") {\r\n      setTopVisible(\"block\");\r\n    } else {\r\n      setTopVisible(\"none\");\r\n    }\r\n  };\r\n  const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = product;\r\n  let availableSizesArr = [\r\n    { name: \"XS\", stock: sizeXS },\r\n    { name: \"S\", stock: sizeS },\r\n    { name: \"M\", stock: sizeM },\r\n    { name: \"L\", stock: sizeL },\r\n    { name: \"XL\", stock: sizeXL },\r\n    { name: \"XXL\", stock: sizeXXL },\r\n  ];\r\n  //filter array to size avaialable >0\r\n  let availableSizesFiltered = availableSizesArr.filter(\r\n    (size) => size.stock > 0\r\n  );\r\n\r\n  let arr = [\r\n    { XS: sizeXS },\r\n    { S: sizeS },\r\n    { M: sizeM },\r\n    { L: sizeL },\r\n    { XL: sizeXL },\r\n    { XXL: sizeXXL },\r\n  ];\r\n  let sizeArr = availableSizesFiltered.map((size) => size.name);\r\n  console.log(sizeArr);\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Product</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className={styles.container}>\r\n            <Carousel\r\n              infiniteLoop\r\n              dynamicHeight\r\n              showThumbs={false}\r\n              showStatus={false}\r\n              className={styles.carousel}\r\n            >\r\n              {product.product_image &&\r\n                product.product_image.map((imageNew) => (\r\n                  <div style={{ height: `500px`, backgroundColor: `white` }}>\r\n                    <img\r\n                      src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${imageNew}?alt=media`}\r\n                      className={styles.image}\r\n                      alt=\"image_preview\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </Carousel>\r\n            <div className={styles.details}>\r\n              <h1 className={styles.cod}>{product.product_cod}</h1>\r\n              <div className={styles.badgePrimary}>{product.type}</div>\r\n              <h1 className={styles.price}>{`₹${product.product_price}`}</h1>\r\n              <h1 className={styles.resellerPrice}>\r\n                Reseller Price:\r\n                {` ₹${parseInt(\r\n                  product.product_price - (product.product_price / 100) * 10\r\n                )}`}\r\n              </h1>\r\n              <h1 className={styles.fabric}>{product.fabric}</h1>\r\n              <button\r\n                className={styles.btnWtsp}\r\n                onClick={() => {\r\n                  copyText(resellerCopy(product, sizeArr));\r\n                  setCopySuccess(\"copied!\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Whatsapp}\r\n                  alt=\"whatsapp\"\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  style={{ marginRight: `3px` }}\r\n                />\r\n                Copy For Resellers\r\n              </button>\r\n              {/* show copied text status */}\r\n              <p>{copySuccess}</p>\r\n              <button\r\n                className={styles.btnInstagram}\r\n                onClick={() => {\r\n                  copyText(instagramCopy(product));\r\n                  setcopySuccessInsta(\"copied!\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={Instagram}\r\n                  width=\"20px\"\r\n                  alt=\"instagram\"\r\n                  height=\"20px\"\r\n                  style={{ marginRight: `3px` }}\r\n                />\r\n                Copy For Instagram\r\n              </button>\r\n              {/* show copied text status */}\r\n              <p>{copySuccessInsta}</p>\r\n              <div>\r\n                <TableSize\r\n                  display=\"block\"\r\n                  column1=\"Size\"\r\n                  column2=\"Stock\"\r\n                  list={availableSizesFiltered}\r\n                />\r\n              </div>\r\n              <h1 className={styles.fabric}>Size Chart </h1>\r\n              <button className={styles.pantOrTop} onClick={handlePantToggle}>\r\n                Pant\r\n              </button>\r\n              <TableSize\r\n                display={pantVisible}\r\n                column1=\"Size\"\r\n                column2=\"Length\"\r\n                list={pantSizesArr}\r\n              />\r\n              <button className={styles.pantOrTop} onClick={handleTopToggle}>\r\n                Top\r\n              </button>\r\n              <TableSize\r\n                display={topVisible}\r\n                column1=\"Size\"\r\n                column2=\"Length\"\r\n                list={topSizesArr}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: `20px` }} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetailed;\r\n","D:\\Abony Price Directory\\price-directory\\src\\pages\\script.js",["110"],"import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\nconst Script = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    data.length > 0 && console.log(data);\r\n  });\r\n\r\n  const db = firebase.firestore();\r\n\r\n  const getData = async () => {\r\n    const dataFetched = await db.collection(\"products\").get();\r\n    await setData(\r\n      dataFetched.docs.map((product) => {\r\n        return { ...product.data(), id: product.id };\r\n      })\r\n    );\r\n    console.log(data);\r\n  };\r\n  function reg(cod) {\r\n    var numberPattern = /\\d+/g;\r\n    let cln = cod.match(numberPattern).join(\"\");\r\n    var lttr = cod.match(/[a-zA-Z]+/g).join(\"\");\r\n    return lttr + cln;\r\n  }\r\n  const updateData = async () => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      await db\r\n        .collection(\"products\")\r\n        .doc(data[i].id)\r\n        .update({ product_cod: reg(data[i].product_cod) });\r\n    }\r\n    console.log(\"finished\");\r\n  };\r\n  function reg(cod) {\r\n    var numberPattern = /\\d+/g;\r\n    let cln = cod.match(numberPattern).join(\"\");\r\n    var lttr = cod.match(/[a-zA-Z]+/g).join(\"\");\r\n    return lttr + cln;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 onClick={getData}>GET DATA</h1>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <h1 onClick={updateData} style={{ color: \"red\" }}>\r\n        UPDATE DATA\r\n      </h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Script;\r\n","D:\\Abony Price Directory\\price-directory\\src\\App.js",["111"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\addOrder.js",["112","113"],"import { React, useRef, useState } from \"react\";\r\nimport styles from \"./addOrder.module.scss\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\nimport { useForm } from \"../components/useForm\";\r\nimport firebase from \"../firebase\";\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Textarea,\r\n  Stack,\r\n  Radio,\r\n  RadioGroup,\r\n  Button,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst AddOrder = () => {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"3\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [order, setOrder, updateOrder] = useForm([]);\r\n  const [imageConverted, setImageConverted] = useState();\r\n  const cancelRef = useRef();\r\n  const history = useHistory();\r\n  const db = firebase.firestore();\r\n\r\n  const addOrder = async () => {\r\n    setIsOpen(false);\r\n    setIsLoading(true);\r\n\r\n    let imageName = await imageToServer(imageConverted);\r\n    db.collection(\"orders\").add({\r\n      date: Date.now(),\r\n      payment_method: paymentMethod,\r\n      order_status: \"1\",\r\n      product_image: imageName,\r\n      ...order,\r\n    });\r\n    setIsLoading(false);\r\n    history.push(\"/orders\");\r\n  };\r\n  const compressImage = async (event) => {\r\n    //compresses image to below 1MB\r\n    const options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1280,\r\n      useWebWorker: true,\r\n    };\r\n    try {\r\n      const compressedFile = await imageCompression(\r\n        event.target.files[0],\r\n        options\r\n      );\r\n      setImageConverted(compressedFile);\r\n      // setProductImageConverted(URL.createObjectURL(compressedFile));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const imageToServer = async (image) => {\r\n    //upload image to firebase storage\r\n    let storageRef = firebase.storage().ref();\r\n    let imagesRef = storageRef.child(\"images\");\r\n    let imageName = uuidv4();\r\n    let spaceRef = imagesRef.child(imageName);\r\n    let resp = await spaceRef.put(image);\r\n    return imageName;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={() => history.goBack()}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Add Order</h1>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <FormControl w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Customer Name :</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            size=\"lg\"\r\n            name=\"customer_name\"\r\n            onChange={updateOrder}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"customer_address\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Address :</FormLabel>\r\n          <Textarea\r\n            type=\"text\"\r\n            size=\"lg\"\r\n            rows=\"4\"\r\n            name=\"customer_address\"\r\n            onChange={updateOrder}\r\n          />\r\n        </FormControl>\r\n        <img\r\n          src={imageConverted && URL.createObjectURL(imageConverted)}\r\n          width=\"200px\"\r\n          alt=\"image_preview\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file-upload\"\r\n          onChange={(event) => compressImage(event)}\r\n        />\r\n        <FormControl id=\"product_cod\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Product Code:</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            size=\"lg\"\r\n            name=\"product_cod\"\r\n            onChange={updateOrder}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"product_price\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Product Price :</FormLabel>\r\n          <Input\r\n            type=\"number\"\r\n            size=\"lg\"\r\n            name=\"product_price\"\r\n            onChange={updateOrder}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"product_size\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Product Size :</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            size=\"lg\"\r\n            name=\"product_size\"\r\n            onChange={updateOrder}\r\n          />\r\n        </FormControl>\r\n        <FormControl id=\"payment_method\" w=\"90%\" mt=\"2\" isRequired>\r\n          <FormLabel>Payment Method :</FormLabel>\r\n          <RadioGroup\r\n            onChange={setPaymentMethod}\r\n            value={paymentMethod}\r\n            name=\"payement_method\"\r\n          >\r\n            <Stack direction=\"row\">\r\n              <Radio value=\"1\">Gpay PhonePe</Radio>\r\n              <Radio value=\"2\">Account Transfer</Radio>\r\n              <Radio value=\"3\">COD</Radio>\r\n            </Stack>\r\n          </RadioGroup>\r\n        </FormControl>\r\n        {paymentMethod !== \"3\" && (\r\n          <FormControl id=\"trasfer_details\" w=\"90%\" mt=\"2\" isRequired>\r\n            <FormLabel>Transfer Details :</FormLabel>\r\n            <Textarea\r\n              type=\"text\"\r\n              size=\"lg\"\r\n              rows=\"2\"\r\n              name=\"transfer_details\"\r\n              onChange={updateOrder}\r\n            />\r\n          </FormControl>\r\n        )}\r\n        <Button\r\n          colorScheme=\"teal\"\r\n          variant=\"solid\"\r\n          size=\"xs\"\r\n          w=\"90%\"\r\n          padding=\"6\"\r\n          mt=\"6\"\r\n          mb=\"6\"\r\n          isLoading={isLoading}\r\n          loadingText=\"Uploading\"\r\n          onClick={() => setIsOpen(true)}\r\n        >\r\n          Add order\r\n        </Button>\r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={() => setIsOpen(false)}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent w=\"90%\" pos=\"center\">\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                Add Order\r\n              </AlertDialogHeader>\r\n\r\n              <AlertDialogBody>\r\n                Are you sure you want to add this order ?\r\n              </AlertDialogBody>\r\n\r\n              <AlertDialogFooter>\r\n                <Button ref={cancelRef} onClick={() => setIsOpen(false)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button colorScheme=\"green\" ml={3} onClick={addOrder}>\r\n                  Add\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddOrder;\r\n","D:\\Abony Price Directory\\price-directory\\src\\components\\tabHeader.js",[],"D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductsAdmin.js",["114","115","116","117"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\addCategoryAdmin.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":12,"column":10,"nodeType":"124","messageId":"125","endLine":12,"endColumn":29},{"ruleId":"122","severity":1,"message":"126","line":13,"column":10,"nodeType":"124","messageId":"125","endLine":13,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":34,"column":6,"nodeType":"129","endLine":34,"endColumn":8,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":60,"column":21,"nodeType":"133","messageId":"134","endLine":60,"endColumn":23},{"ruleId":"127","severity":1,"message":"135","line":35,"column":6,"nodeType":"129","endLine":35,"endColumn":18,"suggestions":"136"},{"ruleId":"118","replacedBy":"137"},{"ruleId":"120","replacedBy":"138"},{"ruleId":"127","severity":1,"message":"139","line":28,"column":8,"nodeType":"129","endLine":28,"endColumn":10,"suggestions":"140"},{"ruleId":"122","severity":1,"message":"141","line":7,"column":16,"nodeType":"124","messageId":"125","endLine":7,"endColumn":22},{"ruleId":"122","severity":1,"message":"142","line":16,"column":3,"nodeType":"124","messageId":"125","endLine":16,"endColumn":9},{"ruleId":"122","severity":1,"message":"143","line":18,"column":3,"nodeType":"124","messageId":"125","endLine":18,"endColumn":8},{"ruleId":"122","severity":1,"message":"144","line":19,"column":3,"nodeType":"124","messageId":"125","endLine":19,"endColumn":9},{"ruleId":"122","severity":1,"message":"145","line":20,"column":3,"nodeType":"124","messageId":"125","endLine":20,"endColumn":13},{"ruleId":"122","severity":1,"message":"146","line":21,"column":3,"nodeType":"124","messageId":"125","endLine":21,"endColumn":14},{"ruleId":"122","severity":1,"message":"147","line":22,"column":3,"nodeType":"124","messageId":"125","endLine":22,"endColumn":18},{"ruleId":"122","severity":1,"message":"148","line":23,"column":3,"nodeType":"124","messageId":"125","endLine":23,"endColumn":20},{"ruleId":"122","severity":1,"message":"149","line":24,"column":3,"nodeType":"124","messageId":"125","endLine":24,"endColumn":20},{"ruleId":"122","severity":1,"message":"150","line":25,"column":3,"nodeType":"124","messageId":"125","endLine":25,"endColumn":21},{"ruleId":"122","severity":1,"message":"151","line":26,"column":3,"nodeType":"124","messageId":"125","endLine":26,"endColumn":21},{"ruleId":"127","severity":1,"message":"152","line":47,"column":6,"nodeType":"129","endLine":47,"endColumn":8,"suggestions":"153"},{"ruleId":"122","severity":1,"message":"154","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":14},{"ruleId":"127","severity":1,"message":"155","line":66,"column":6,"nodeType":"129","endLine":66,"endColumn":8,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":192,"column":11,"nodeType":"159","endLine":192,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":228,"column":11,"nodeType":"159","endLine":228,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":247,"column":11,"nodeType":"159","endLine":247,"endColumn":26},{"ruleId":"122","severity":1,"message":"160","line":34,"column":10,"nodeType":"124","messageId":"125","endLine":34,"endColumn":21},{"ruleId":"127","severity":1,"message":"161","line":65,"column":6,"nodeType":"129","endLine":65,"endColumn":8,"suggestions":"162"},{"ruleId":"122","severity":1,"message":"163","line":70,"column":11,"nodeType":"124","messageId":"125","endLine":70,"endColumn":17},{"ruleId":"127","severity":1,"message":"164","line":93,"column":6,"nodeType":"129","endLine":93,"endColumn":8,"suggestions":"165"},{"ruleId":"122","severity":1,"message":"166","line":128,"column":7,"nodeType":"124","messageId":"125","endLine":128,"endColumn":10},{"ruleId":"167","severity":1,"message":"168","line":36,"column":12,"nodeType":"124","messageId":"169","endLine":36,"endColumn":15},{"ruleId":"122","severity":1,"message":"170","line":14,"column":8,"nodeType":"124","messageId":"125","endLine":14,"endColumn":14},{"ruleId":"122","severity":1,"message":"171","line":30,"column":17,"nodeType":"124","messageId":"125","endLine":30,"endColumn":25},{"ruleId":"122","severity":1,"message":"172","line":75,"column":9,"nodeType":"124","messageId":"125","endLine":75,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":13,"column":10,"nodeType":"124","messageId":"125","endLine":13,"endColumn":29},{"ruleId":"122","severity":1,"message":"126","line":14,"column":10,"nodeType":"124","messageId":"125","endLine":14,"endColumn":31},{"ruleId":"127","severity":1,"message":"173","line":38,"column":6,"nodeType":"129","endLine":38,"endColumn":8,"suggestions":"174"},{"ruleId":"131","severity":1,"message":"132","line":40,"column":21,"nodeType":"133","messageId":"134","endLine":40,"endColumn":23},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'isProductsDisplayed' is assigned a value but never used.","Identifier","unusedVar","'isSearchResultLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'productsRef' and 'updateProductsState'. Either include them or remove the dependency array.","ArrayExpression",["177"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.",["178"],["175"],["176"],"React Hook useEffect has missing dependencies: 'category' and 'db'. Either include them or remove the dependency array.",["179"],"'uuidv4' is defined but never used.","'Select' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","'SimpleGrid' is defined but never used.","'AlertDialog' is defined but never used.","'AlertDialogBody' is defined but never used.","'AlertDialogFooter' is defined but never used.","'AlertDialogHeader' is defined but never used.","'AlertDialogContent' is defined but never used.","'AlertDialogOverlay' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'ref', and 'setProduct'. Either include them or remove the dependency array.",["180"],"'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'setProduct'. Either include it or remove the dependency array.",["181"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'orderStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'ref', and 'setOrder'. Either include them or remove the dependency array.",["182"],"'update' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'ref'. Either include them or remove the dependency array.",["183"],"'arr' is assigned a value but never used.","no-redeclare","'reg' is already defined.","redeclared","'script' is defined but never used.","'setOrder' is assigned a value but never used.","'resp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [productsRef, updateProductsState]",{"range":"201","text":"202"},"Update the dependencies array to be: [categories, handleFilter]",{"range":"203","text":"204"},"Update the dependencies array to be: [category, db]",{"range":"205","text":"206"},"Update the dependencies array to be: [id, ref, setProduct]",{"range":"207","text":"208"},"Update the dependencies array to be: [setProduct]",{"range":"209","text":"210"},"Update the dependencies array to be: [id, ref, setOrder]",{"range":"211","text":"212"},"Update the dependencies array to be: [id, ref]",{"range":"213","text":"214"},"Update the dependencies array to be: [db]",{"range":"215","text":"216"},[1426,1428],"[productsRef, updateProductsState]",[1070,1082],"[categories, handleFilter]",[1064,1066],"[category, db]",[1509,1511],"[id, ref, setProduct]",[1945,1947],"[setProduct]",[2006,2008],"[id, ref, setOrder]",[2977,2979],"[id, ref]",[1329,1331],"[db]"]