[{"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductEditAdmin.js":"1","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\index.js":"2","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductsAdmin.js":"3","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductDetailed.js":"4","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\productAdd.js":"5","C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\Products.js":"6"},{"size":8999,"mtime":1607080138672,"results":"7","hashOfConfig":"8"},{"size":450,"mtime":1606978137132,"results":"9","hashOfConfig":"8"},{"size":4248,"mtime":1607077787205,"results":"10","hashOfConfig":"8"},{"size":4790,"mtime":1607069626321,"results":"11","hashOfConfig":"8"},{"size":6364,"mtime":1607076475207,"results":"12","hashOfConfig":"8"},{"size":4237,"mtime":1607078263259,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1jnw47w",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductEditAdmin.js",["28"],"import { useState, useEffect } from \"react\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport styles from \"./productadd.module.scss\";\r\nimport firebase from \"../firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\n\r\nconst ProductAdd = (props) => {\r\n  const [product, setProduct] = useState({});\r\n  const [product_image, setProductImage] = useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [product_image_converted, setProductImageConverted] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUpdateLoading, setIsUpdateLoading] = useState(false);\r\n  const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n  const ref = firebase.firestore().collection(\"products\");\r\n  const id = props.match.params.id;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      const snapshot = await ref.doc(id).get();\r\n      const data = await snapshot.data();\r\n      setProduct(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addProduct = async () => {\r\n    setIsUpdateLoading(true);\r\n    let imageName;\r\n    if (isImage) {\r\n      imageName = await imageToServer(product_image);\r\n    }\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\")\r\n      .doc(id)\r\n      .set({ ...product, product_image: imageName });\r\n    setIsUpdateLoading(false);\r\n    history.push(\"/admin/products_admin\");\r\n  };\r\n\r\n  const deleteProduct = () => {\r\n    setIsDeleteLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\").doc(id).delete();\r\n    setIsDeleteLoading(false);\r\n    history.push(\"/admin/products_admin\");\r\n  };\r\n\r\n  const compressImage = async (event) => {\r\n    //compresses image to below 1MB\r\n    const imageFile = event.target.files[0];\r\n    const options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: true,\r\n    };\r\n    try {\r\n      const compressedFile = await imageCompression(imageFile, options);\r\n      setProductImage(compressedFile);\r\n      setIsImage(true);\r\n      setProductImageConverted(URL.createObjectURL(compressedFile));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const imageToServer = async (image) => {\r\n    //upload image to firebase storage\r\n    let storageRef = firebase.storage().ref();\r\n    // Points to 'images'\r\n    let imageName = uuidv4();\r\n    let imagesRef = storageRef.child(\"images\");\r\n    var spaceRef = imagesRef.child(imageName);\r\n    await spaceRef.put(image);\r\n    return imageName;\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Product</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className={styles.container}>\r\n            {isImage ? (\r\n              <img\r\n                src={product_image_converted}\r\n                className={styles.image}\r\n                alt=\"image_preview\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image}?alt=media`}\r\n                className={styles.image}\r\n                alt=\"image_preview\"\r\n              />\r\n            )}\r\n            <label htmlFor=\"file-upload\" className={styles.customFileUpload}>\r\n              Upload Image\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"file-upload\"\r\n              onChange={(event) => compressImage(event)}\r\n            />\r\n            <label>Product cod</label>\r\n            <input\r\n              type=\"text\"\r\n              value={product.product_cod || \"\"}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, product_cod: e.target.value })\r\n              }\r\n            />\r\n            <label>Product Price</label>\r\n            <input\r\n              type=\"number\"\r\n              value={product.product_price || \"\"}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, product_price: e.target.value })\r\n              }\r\n            />\r\n            <label>Product Sizes</label>\r\n            <div className={styles.productSizeContainer}>\r\n              <div className={styles.sizeItem}>\r\n                <label>XS</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXS || \"\"}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({ ...product, sizeXS: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>S</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeS || \"\"}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeS: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>M</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeM || \"\"}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeM: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.productSizeContainer}>\r\n              <div className={styles.sizeItem}>\r\n                <label>L</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeL || \"\"}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>XL</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXL || \"\"}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeXL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>XXL</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXXL || \"\"}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeXXL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={addProduct} className={styles.btnPrimary}>\r\n              {isUpdateLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isUpdateLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Update Product</div>\r\n              )}\r\n            </button>\r\n            <button onClick={deleteProduct} className={styles.btnDanger}>\r\n              {isDeleteLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isDeleteLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Delete Product</div>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductAdd;\r\n",["29","30"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\index.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductsAdmin.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\ProductDetailed.js",["31"],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\productAdd.js",[],"C:\\Users\\Suhail\\Desktop\\hadi\\price-directory\\src\\pages\\Products.js",[],{"ruleId":"32","severity":1,"message":"33","line":32,"column":6,"nodeType":"34","endLine":32,"endColumn":8,"suggestions":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"40","line":28,"column":6,"nodeType":"34","endLine":28,"endColumn":8,"suggestions":"41"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'ref'. Either include them or remove the dependency array.","ArrayExpression",["42"],"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"React Hook useEffect has missing dependencies: 'id', 'product', and 'ref'. Either include them or remove the dependency array.",["45"],{"desc":"46","fix":"47"},"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [id, ref]",{"range":"50","text":"51"},"Update the dependencies array to be: [id, product, ref]",{"range":"52","text":"53"},[1285,1287],"[id, ref]",[958,960],"[id, product, ref]"]