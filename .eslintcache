[{"D:\\Abony Price Directory\\price-directory\\src\\index.js":"1","D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js":"2","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js":"3","D:\\Abony Price Directory\\price-directory\\src\\pages\\Home.js":"4","D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js":"5","D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js":"6","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js":"7","D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js":"8","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductsAdmin.js":"9","D:\\Abony Price Directory\\price-directory\\src\\App.js":"10","D:\\Abony Price Directory\\price-directory\\src\\firebase.js":"11"},{"size":450,"mtime":1606820767978,"results":"12","hashOfConfig":"13"},{"size":7914,"mtime":1607759334497,"results":"14","hashOfConfig":"13"},{"size":9113,"mtime":1607663823504,"results":"15","hashOfConfig":"13"},{"size":1045,"mtime":1607794215956,"results":"16","hashOfConfig":"13"},{"size":2840,"mtime":1608012973093,"results":"17","hashOfConfig":"13"},{"size":4888,"mtime":1607759408001,"results":"18","hashOfConfig":"13"},{"size":7760,"mtime":1608013017542,"results":"19","hashOfConfig":"13"},{"size":1216,"mtime":1608012459744,"results":"20","hashOfConfig":"13"},{"size":4926,"mtime":1607664180129,"results":"21","hashOfConfig":"13"},{"size":980,"mtime":1607794229958,"results":"22","hashOfConfig":"13"},{"size":516,"mtime":1606994261113,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6qx1r0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Abony Price Directory\\price-directory\\src\\index.js",[],["51","52"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js",["53"],"import { useState, useEffect } from \"react\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport styles from \"./productadd.module.scss\";\r\nimport firebase from \"../firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\n\r\nconst ProductAdd = (props) => {\r\n  const [product, setProduct] = useState({});\r\n  const [product_image, setProductImage] = useState(\"\");\r\n  const [isImage, setIsImage] = useState(false);\r\n  const [product_image_converted, setProductImageConverted] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUpdateLoading, setIsUpdateLoading] = useState(false);\r\n  const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n  const ref = firebase.firestore().collection(\"products\");\r\n  const id = props.match.params.id;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(product_image);\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      const snapshot = await ref.doc(id).get();\r\n      const data = await snapshot.data();\r\n      setProduct(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addProduct = async () => {\r\n    setIsUpdateLoading(true);\r\n    let imageName;\r\n    if (isImage) {\r\n      imageName = await imageToServer(product_image);\r\n    }\r\n    const db = firebase.firestore();\r\n    if (isImage) {\r\n      db.collection(\"products\")\r\n        .doc(id)\r\n        .set({ ...product, product_image: imageName });\r\n    } else {\r\n      db.collection(\"products\")\r\n        .doc(id)\r\n        .set({ ...product });\r\n    }\r\n    setIsUpdateLoading(false);\r\n    history.push(\"/admin/products_admin\");\r\n  };\r\n\r\n  const deleteProduct = () => {\r\n    setIsDeleteLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\").doc(id).delete();\r\n    setIsDeleteLoading(false);\r\n    history.push(\"/admin/products_admin\");\r\n  };\r\n\r\n  const compressImage = async (event) => {\r\n    //compresses image to below 1MB\r\n    const imageFile = event.target.files[0];\r\n    const options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: true,\r\n    };\r\n    try {\r\n      const compressedFile = await imageCompression(imageFile, options);\r\n      setProductImage(compressedFile);\r\n      setIsImage(true);\r\n      setProductImageConverted(URL.createObjectURL(compressedFile));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const imageToServer = async (image) => {\r\n    //upload image to firebase storage\r\n    let storageRef = firebase.storage().ref();\r\n    // Points to 'images'\r\n    let imageName = uuidv4();\r\n    let imagesRef = storageRef.child(\"images\");\r\n    var spaceRef = imagesRef.child(imageName);\r\n    await spaceRef.put(image);\r\n    return imageName;\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={handleBackClick}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Product</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className={styles.container}>\r\n            {isImage ? (\r\n              <img\r\n                src={product_image_converted}\r\n                className={styles.image}\r\n                alt=\"image_preview\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={`https://firebasestorage.googleapis.com/v0/b/abony-price-directory.appspot.com/o/images%2F${product.product_image}?alt=media`}\r\n                className={styles.image}\r\n                alt=\"image_preview\"\r\n              />\r\n            )}\r\n            <label htmlFor=\"file-upload\" className={styles.customFileUpload}>\r\n              Upload Image\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"file-upload\"\r\n              onChange={(event) => compressImage(event)}\r\n            />\r\n            <label>Product cod</label>\r\n            <input\r\n              type=\"text\"\r\n              value={product.product_cod}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, product_cod: e.target.value })\r\n              }\r\n            />\r\n            <label>Product Price</label>\r\n            <input\r\n              type=\"number\"\r\n              value={product.product_price}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, product_price: e.target.value })\r\n              }\r\n            />\r\n            <label>Product Sizes</label>\r\n            <div className={styles.productSizeContainer}>\r\n              <div className={styles.sizeItem}>\r\n                <label>XS</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXS}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({ ...product, sizeXS: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>S</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeS}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeS: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>M</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeM}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeM: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.productSizeContainer}>\r\n              <div className={styles.sizeItem}>\r\n                <label>L</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeL}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>XL</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXL}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeXL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={styles.sizeItem}>\r\n                <label>XXL</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.sizeXXL}\r\n                  className={styles.sizeField}\r\n                  onChange={(e) =>\r\n                    setProduct({\r\n                      ...product,\r\n                      sizeXXL: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <button onClick={addProduct} className={styles.btnPrimary}>\r\n              {isUpdateLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isUpdateLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Update Product</div>\r\n              )}\r\n            </button>\r\n            <button onClick={deleteProduct} className={styles.btnDanger}>\r\n              {isDeleteLoading ? (\r\n                <div className={styles.loader}>\r\n                  <Loader\r\n                    type=\"Oval\"\r\n                    color=\"white\"\r\n                    height={18}\r\n                    width={18}\r\n                    visible={isDeleteLoading}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>Delete Product</div>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductAdd;\r\n","D:\\Abony Price Directory\\price-directory\\src\\pages\\Home.js",["54","55"],"import React from \"react\";\r\nimport styles from \"./home.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport User from \"../assets/user.png\";\r\nimport Admin from \"../assets/admin.png\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n\r\n  const handleUserClick = () => {\r\n    history.push(\"/products\");\r\n  };\r\n  const handleAdminClick = () => {\r\n    history.push(\"/admin/products_admin\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <h1 className={styles.label}>Abony Clothing</h1>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <button className={styles.card} onClick={handleUserClick}>\r\n          <img src={User} className={styles.icon} />\r\n          <h1 className={styles.cardHeading}>User</h1>\r\n        </button>\r\n        <button className={styles.card} onClick={handleAdminClick}>\r\n          <img src={Admin} className={styles.icon} />\r\n          <h1 className={styles.cardHeading}>Admin</h1>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",["56","57"],"D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js",["58","59"],"D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js",[],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductsAdmin.js",[],"D:\\Abony Price Directory\\price-directory\\src\\App.js",[],["60","61"],"D:\\Abony Price Directory\\price-directory\\src\\firebase.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":33,"column":6,"nodeType":"68","endLine":33,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":23,"column":11,"nodeType":"72","endLine":23,"endColumn":53},{"ruleId":"70","severity":1,"message":"71","line":27,"column":11,"nodeType":"72","endLine":27,"endColumn":54},{"ruleId":"62","replacedBy":"73"},{"ruleId":"64","replacedBy":"74"},{"ruleId":"66","severity":1,"message":"75","line":90,"column":6,"nodeType":"68","endLine":90,"endColumn":8,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":125,"column":7,"nodeType":"79","messageId":"80","endLine":125,"endColumn":10},{"ruleId":"62","replacedBy":"81"},{"ruleId":"64","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'product_image', and 'ref'. Either include them or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["83"],["84"],"React Hook useEffect has missing dependencies: 'id' and 'ref'. Either include them or remove the dependency array.",["86"],"no-unused-vars","'arr' is assigned a value but never used.","Identifier","unusedVar",["83"],["84"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [id, product_image, ref]",{"range":"91","text":"92"},"Update the dependencies array to be: [id, ref]",{"range":"93","text":"94"},[1318,1320],"[id, product_image, ref]",[2834,2836],"[id, ref]"]