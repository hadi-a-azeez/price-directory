[{"D:\\Abony Price Directory\\price-directory\\src\\index.js":"1","D:\\Abony Price Directory\\price-directory\\src\\pages\\Home.js":"2","D:\\Abony Price Directory\\price-directory\\src\\App.js":"3","D:\\Abony Price Directory\\price-directory\\src\\pages\\addOrder.js":"4","D:\\Abony Price Directory\\price-directory\\src\\API\\category.js":"5","D:\\Abony Price Directory\\price-directory\\src\\components\\useFormLocal.js":"6","D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js":"7","D:\\Abony Price Directory\\price-directory\\src\\pages\\orders.js":"8","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js":"9","D:\\Abony Price Directory\\price-directory\\src\\pages\\orderDetailed.js":"10","D:\\Abony Price Directory\\price-directory\\src\\API\\order.js":"11","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js":"12","D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js":"13","D:\\Abony Price Directory\\price-directory\\src\\pages\\addCategoryAdmin.js":"14","D:\\Abony Price Directory\\price-directory\\src\\components\\tabHeader.js":"15","D:\\Abony Price Directory\\price-directory\\src\\API\\product.js":"16","D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js":"17","D:\\Abony Price Directory\\price-directory\\src\\pages\\categoryProducts.js":"18","D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js":"19"},{"size":547,"mtime":1611641097299,"results":"20","hashOfConfig":"21"},{"size":1021,"mtime":1610705155321,"results":"22","hashOfConfig":"21"},{"size":1639,"mtime":1611038266387,"results":"23","hashOfConfig":"21"},{"size":12581,"mtime":1611574969423,"results":"24","hashOfConfig":"21"},{"size":415,"mtime":1611039578970,"results":"25","hashOfConfig":"21"},{"size":560,"mtime":1610805873643,"results":"26","hashOfConfig":"21"},{"size":2792,"mtime":1610694740917,"results":"27","hashOfConfig":"21"},{"size":4858,"mtime":1611644609273,"results":"28","hashOfConfig":"21"},{"size":8027,"mtime":1611645434442,"results":"29","hashOfConfig":"21"},{"size":13358,"mtime":1611575822951,"results":"30","hashOfConfig":"21"},{"size":1558,"mtime":1611575261265,"results":"31","hashOfConfig":"21"},{"size":10505,"mtime":1611665168665,"results":"32","hashOfConfig":"21"},{"size":12192,"mtime":1611659879064,"results":"33","hashOfConfig":"21"},{"size":2751,"mtime":1611207985246,"results":"34","hashOfConfig":"21"},{"size":871,"mtime":1610705348767,"results":"35","hashOfConfig":"21"},{"size":2263,"mtime":1611664883697,"results":"36","hashOfConfig":"21"},{"size":5393,"mtime":1611644260277,"results":"37","hashOfConfig":"21"},{"size":4902,"mtime":1611210961918,"results":"38","hashOfConfig":"21"},{"size":1216,"mtime":1608012459744,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"6qx1r0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Abony Price Directory\\price-directory\\src\\index.js",[],["87","88"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\Home.js",["89"],"import React from \"react\";\r\nimport styles from \"./home.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport User from \"../assets/user.png\";\r\nimport Admin from \"../assets/admin.png\";\r\nimport Orders from \"../assets/orders.png\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <h1 className={styles.label}>Abony Clothing</h1>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <button\r\n          className={styles.card}\r\n          onClick={() => history.push(\"/products\")}\r\n        >\r\n          <img src={User} className={styles.icon} alt=\"icon\" />\r\n          <h1 className={styles.cardHeading}>Products</h1>\r\n        </button>\r\n\r\n        <button className={styles.card} onClick={() => history.push(\"/orders\")}>\r\n          <img src={Orders} className={styles.icon} alt=\"icon\" />\r\n          <h1 className={styles.cardHeading}>Orders</h1>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",["90","91"],"D:\\Abony Price Directory\\price-directory\\src\\App.js",[],["92","93"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\addOrder.js",["94","95","96","97","98","99","100","101"],"D:\\Abony Price Directory\\price-directory\\src\\API\\category.js",[],"D:\\Abony Price Directory\\price-directory\\src\\components\\useFormLocal.js",[],"D:\\Abony Price Directory\\price-directory\\src\\components\\CopyItems.js",[],["102","103"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\orders.js",["104","105","106","107","108"],"import { useEffect, useState } from \"react\";\r\nimport styles from \"./products.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  IconButton,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon, ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport Placeholder from \"../assets/placeholder.png\";\r\nimport { ChakraProvider, Flex, Image, Text, Container } from \"@chakra-ui/react\";\r\nimport { getOrderAPI, searchOrderAPI } from \"../API/order\";\r\nimport { apiRoot } from \"../config\";\r\n\r\nconst Order = () => {\r\n  const history = useHistory();\r\n  const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filteredOrders, setFilteredOrders] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      setIsLoading(true);\r\n      const orderResponse = await getOrderAPI();\r\n      console.log(orderResponse);\r\n      setOrders(orderResponse.data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchOrders();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (searchValue == \"\") {\r\n      setFilteredOrders([]);\r\n    } else {\r\n      doSearch();\r\n    }\r\n  }, [searchValue]);\r\n\r\n  const doSearch = async () => {\r\n    const searchResponse = await searchOrderAPI(searchValue);\r\n    setFilteredOrders(searchResponse.data);\r\n  };\r\n  const OrderCard = ({ order }) => {\r\n    return (\r\n      <Link to={`/order_detailed/${order.id}`} className={styles.link}>\r\n        <Flex\r\n          justifyContent=\"flex-start\"\r\n          width=\"100%\"\r\n          backgroundColor=\"white\"\r\n          borderRadius={10}\r\n          m={2}\r\n          boxShadow=\"lg\"\r\n        >\r\n          {order.orderproducts.length > 0 && (\r\n            <Image\r\n              height=\"120px\"\r\n              width=\"140px\"\r\n              borderRadius=\"10px\"\r\n              src={`${apiRoot}/order-images/${order.orderproducts[0].image}.jpeg`}\r\n              m={2}\r\n              objectFit=\"cover\"\r\n            />\r\n          )}\r\n          <Flex\r\n            flexDirection=\"column\"\r\n            width=\"70%\"\r\n            m={2}\r\n            justifyContent=\"flex-start\"\r\n          >\r\n            <Text fontWeight=\"bold\" textAlign=\"left\" fontSize=\"xl\">\r\n              {order.name}\r\n            </Text>\r\n            <Text fontSize=\"md\">{order.product_cod}</Text>\r\n            <Text fontWeight=\"bold\" fontSize=\"xl\" color=\"green.500\">\r\n              â‚¹{order.orderproducts.reduce((acc, curr) => acc + curr.price, 0)}\r\n            </Text>\r\n\r\n            <Text fontWeight=\"bold\" fontSize=\"2xl\" color=\"red.500\">\r\n              {order.id}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <IconButton\r\n          borderRadius=\"full\"\r\n          colorScheme=\"blue\"\r\n          ml=\"4\"\r\n          mt=\"2\"\r\n          alignSelf=\"flex-start\"\r\n          icon={<ArrowBackIcon color=\"white\" />}\r\n          onClick={() => history.push(\"/\")}\r\n        />\r\n        <InputGroup\r\n          w=\"90%\"\r\n          mb=\"3\"\r\n          mt=\"2\"\r\n          size=\"lg\"\r\n          backgroundColor=\"white\"\r\n          borderRadius=\"6px\"\r\n        >\r\n          <InputRightElement\r\n            children={\r\n              <IconButton\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"30px\"\r\n                onClick={doSearch}\r\n                icon={<SearchIcon />}\r\n              />\r\n            }\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"search in this store\"\r\n            borderRadius=\"6px\"\r\n            borderColor=\"white\"\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className={styles.container}>\r\n        <button\r\n          className={styles.btnFloat}\r\n          onClick={() => history.push(\"/add_order\")}\r\n        >\r\n          +\r\n        </button>\r\n        {searchValue.length < 1 ? (\r\n          <Container p={0}>\r\n            {orders.map((order) => (\r\n              <OrderCard order={order} key={order.id} />\r\n            ))}\r\n          </Container>\r\n        ) : (\r\n          <Container p={0}>\r\n            {filteredOrders.map((order) => (\r\n              <OrderCard order={order} key={order.id} />\r\n            ))}\r\n          </Container>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductEditAdmin.js",["109","110","111","112","113","114","115","116","117","118","119","120","121"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\orderDetailed.js",["122","123","124","125"],"import { React, useRef, useState, useEffect } from \"react\";\r\nimport styles from \"./addOrder.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backIcon from \"../assets/backIcon.png\";\r\nimport { useFormLocal } from \"../components/useFormLocal\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { apiRoot } from \"../config\";\r\nimport {\r\n  getSingleOrderAPI,\r\n  updateOrderAPI,\r\n  deleteOrderAPI,\r\n} from \"../API/order\";\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Textarea,\r\n  Stack,\r\n  Radio,\r\n  RadioGroup,\r\n  Button,\r\n  useToast,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  border,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst OrderDetailed = (props) => {\r\n  const [isUpdateOpen, setIsUpdateOpen] = useState(false); //setting state for update btn modal\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false); //setting state for delete btn modal\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [order, setOrder, updateOrder] = useFormLocal([]);\r\n  const [orderTotal, setOrderTotal] = useState(0);\r\n\r\n  const [isBtnLoading, setIsBtnLoading] = useState(false);\r\n\r\n  const cancelRef = useRef();\r\n  const history = useHistory();\r\n  const orderId = props.match.params.id;\r\n  const toast = useToast();\r\n  const updateModal = {\r\n    header: \"Update Order\",\r\n    body: \"Are you sure you want to update this order ?\",\r\n    button: \"Update\",\r\n    btnColor: \"green\",\r\n  };\r\n  const deleteModal = {\r\n    header: \"Delete Order\",\r\n    body: \"Are you sure you want to delete this order ?\",\r\n    button: \"Delete\",\r\n    btnColor: \"red\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const orderResponse = await getSingleOrderAPI(orderId);\r\n      console.log(orderResponse);\r\n      setOrder(orderResponse.data);\r\n      const amountFull = orderResponse.data.orderproducts.reduce(\r\n        (acc, curr) => acc + curr.price,\r\n        0\r\n      );\r\n      setOrderTotal(amountFull);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleUpdateOrder = async () => {\r\n    setIsUpdateOpen(false);\r\n    setIsBtnLoading(true);\r\n    const updateResponse = await updateOrderAPI(\r\n      {\r\n        status: order.status,\r\n        tracking_id: order.tracking_id,\r\n        order_note: order.order_note,\r\n      },\r\n      orderId\r\n    );\r\n    setIsBtnLoading(false);\r\n    toast({\r\n      title: \"Order updated.\",\r\n      description: \"Order updated successfully.\",\r\n      status: \"success\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n      position: \"bottom\",\r\n    });\r\n  };\r\n\r\n  const handlDeleteOrder = async () => {\r\n    await deleteOrderAPI(orderId);\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <button className={styles.backButton} onClick={() => history.goBack()}>\r\n          <img src={backIcon} className={styles.backIcon} alt=\"back_icon\" />\r\n        </button>\r\n        <h1 className={styles.label}>Order Detailed</h1>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className={styles.container}>\r\n        {!isLoading && (\r\n          <>\r\n            <FormControl w=\"90%\" mt=\"2\">\r\n              <FormLabel>Order Full Amount</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                name=\"order\"\r\n                value={`â‚¹${orderTotal}`}\r\n                variant=\"filled\"\r\n                disabled\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"date\" w=\"90%\" mt=\"2\">\r\n              <FormLabel>Order Date</FormLabel>\r\n              {order.date && (\r\n                <Input\r\n                  type=\"text\"\r\n                  size=\"lg\"\r\n                  name=\"order\"\r\n                  value={new Date(order.date).toLocaleDateString()}\r\n                  variant=\"filled\"\r\n                  disabled\r\n                />\r\n              )}\r\n            </FormControl>\r\n            <FormControl id=\"customer_name\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Order ID:</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                name=\"customer_name\"\r\n                value={order.id}\r\n                variant=\"filled\"\r\n                disabled\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"customer_name\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Customer Name :</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                name=\"customer_name\"\r\n                value={order.name}\r\n                variant=\"filled\"\r\n                disabled\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"customer_address\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Address :</FormLabel>\r\n              <Textarea\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                rows=\"4\"\r\n                name=\"customer_address\"\r\n                value={order.address}\r\n                variant=\"filled\"\r\n                disabled\r\n              />\r\n            </FormControl>\r\n            <h1>Products</h1>\r\n            {order.orderproducts &&\r\n              order.orderproducts.map((product) => (\r\n                <div\r\n                  key={product.id}\r\n                  style={{\r\n                    width: \"90%\",\r\n                    border: \"1px solid grey\",\r\n                    borderRadius: \"5px\",\r\n                    padding: \"15px\",\r\n                    marginBottom: \"8px\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={`${apiRoot}/order-images/${product.image}.jpeg`}\r\n                    width=\"100\"\r\n                  />\r\n                  <FormControl id=\"product_cod\" w=\"90%\" mt=\"2\" isRequired>\r\n                    <FormLabel>Product Code:</FormLabel>\r\n                    <Input\r\n                      type=\"text\"\r\n                      size=\"lg\"\r\n                      name=\"product_cod\"\r\n                      variant=\"filled\"\r\n                      value={product.code}\r\n                      disabled\r\n                    />\r\n                  </FormControl>\r\n                  <Stack direction=\"row\">\r\n                    <FormControl id=\"product_price\" w=\"90%\" mt=\"2\" isRequired>\r\n                      <FormLabel>Product Price :</FormLabel>\r\n                      <Input\r\n                        type=\"number\"\r\n                        size=\"lg\"\r\n                        name=\"product_price\"\r\n                        variant=\"filled\"\r\n                        value={product.price}\r\n                        disabled\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl id=\"product_size\" w=\"90%\" mt=\"2\" isRequired>\r\n                      <FormLabel>Product Size :</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        size=\"lg\"\r\n                        name=\"product_size\"\r\n                        variant=\"filled\"\r\n                        value={product.size}\r\n                        disabled\r\n                      />\r\n                    </FormControl>\r\n                  </Stack>\r\n                </div>\r\n              ))}\r\n            <FormControl id=\"payment_method\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Payment Method :</FormLabel>\r\n              <RadioGroup\r\n                disabled\r\n                value={order.payment_method}\r\n                name=\"payement_method\"\r\n              >\r\n                <Stack direction=\"row\">\r\n                  <Radio value=\"GPAY\">Gpay PhonePe</Radio>\r\n                  <Radio value=\"ACCOUNT\">Account Transfer</Radio>\r\n                  <Radio value=\"COD\">COD</Radio>\r\n                </Stack>\r\n              </RadioGroup>\r\n            </FormControl>\r\n\r\n            <FormControl id=\"trasfer_details\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Transfer Details :</FormLabel>\r\n              <Textarea\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                rows=\"2\"\r\n                name=\"transfer_details\"\r\n                variant=\"filled\"\r\n                value={order.transfer_details || \"\"}\r\n                disabled\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl id=\"order_status\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Order Status :</FormLabel>\r\n              <RadioGroup value={order.status}>\r\n                <Stack direction=\"row\">\r\n                  <Radio value=\"ACCEPTED\" onChange={updateOrder} name=\"status\">\r\n                    Accepted\r\n                  </Radio>\r\n                  <Radio\r\n                    value=\"DISPATCHED\"\r\n                    onChange={updateOrder}\r\n                    name=\"status\"\r\n                  >\r\n                    Dispatched\r\n                  </Radio>\r\n                  <Radio value=\"DELIVERED\" onChange={updateOrder} name=\"status\">\r\n                    Delivered\r\n                  </Radio>\r\n                </Stack>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <FormControl id=\"tracking_id\" w=\"90%\" mt=\"2\" isRequired>\r\n              <FormLabel>Tracking Id :</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                name=\"tracking_id\"\r\n                value={order.tracking_id || \"\"}\r\n                onChange={updateOrder}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"date\" w=\"90%\" mt=\"2\">\r\n              <FormLabel>Order Note</FormLabel>\r\n\r\n              <Input\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                name=\"order_note\"\r\n                value={order.order_note || \"\"}\r\n                onChange={updateOrder}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              colorScheme=\"teal\"\r\n              variant=\"solid\"\r\n              size=\"xs\"\r\n              w=\"90%\"\r\n              padding=\"6\"\r\n              mt=\"6\"\r\n              isLoading={isBtnLoading}\r\n              loadingText=\"Updating\"\r\n              onClick={() => setIsUpdateOpen(true)}\r\n            >\r\n              Update Order\r\n            </Button>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              variant=\"solid\"\r\n              size=\"xs\"\r\n              w=\"90%\"\r\n              padding=\"6\"\r\n              mt=\"3\"\r\n              mb=\"6\"\r\n              onClick={() => setIsDeleteOpen(true)}\r\n            >\r\n              Delete Order\r\n            </Button>\r\n            {/* alert dialog for update */}\r\n            <AlertDialog\r\n              isOpen={isUpdateOpen}\r\n              leastDestructiveRef={cancelRef}\r\n              onClose={() => isUpdateOpen(false)}\r\n            >\r\n              <AlertDialogOverlay>\r\n                <AlertDialogContent w=\"90%\" pos=\"center\">\r\n                  <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    {updateModal.header}\r\n                  </AlertDialogHeader>\r\n\r\n                  <AlertDialogBody>{updateModal.body}</AlertDialogBody>\r\n\r\n                  <AlertDialogFooter>\r\n                    <Button\r\n                      ref={cancelRef}\r\n                      onClick={() => setIsUpdateOpen(false)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      colorScheme={updateModal.btnColor}\r\n                      ml={3}\r\n                      onClick={handleUpdateOrder}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n              </AlertDialogOverlay>\r\n            </AlertDialog>\r\n            {/* alert dialog for delete */}\r\n            <AlertDialog\r\n              isOpen={isDeleteOpen}\r\n              leastDestructiveRef={cancelRef}\r\n              onClose={() => setIsDeleteOpen(false)}\r\n            >\r\n              <AlertDialogOverlay>\r\n                <AlertDialogContent w=\"90%\" pos=\"center\">\r\n                  <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                    {deleteModal.header}\r\n                  </AlertDialogHeader>\r\n\r\n                  <AlertDialogBody>{deleteModal.body}</AlertDialogBody>\r\n\r\n                  <AlertDialogFooter>\r\n                    <Button\r\n                      ref={cancelRef}\r\n                      onClick={() => setIsDeleteOpen(false)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      colorScheme={deleteModal.btnColor}\r\n                      ml={3}\r\n                      onClick={handlDeleteOrder}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </AlertDialogFooter>\r\n                </AlertDialogContent>\r\n              </AlertDialogOverlay>\r\n            </AlertDialog>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetailed;\r\n","D:\\Abony Price Directory\\price-directory\\src\\API\\order.js",["126"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\ProductDetailed.js",["127","128","129","130","131","132"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\productAdd.js",["133","134","135","136","137","138","139"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\addCategoryAdmin.js",["140","141","142","143"],"D:\\Abony Price Directory\\price-directory\\src\\components\\tabHeader.js",[],["144","145"],"D:\\Abony Price Directory\\price-directory\\src\\API\\product.js",["146"],"D:\\Abony Price Directory\\price-directory\\src\\pages\\Products.js",["147","148","149"],"import { useEffect, useState } from \"react\";\r\nimport styles from \"./products.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TabHeader from \"../components/tabHeader\";\r\nimport { getProductAPI, searchProductAPI } from \"../API/product\";\r\nimport { apiRoot } from \"../config\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  IconButton,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon, ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport Placeholder from \"../assets/placeholder.png\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const productsResponse = await getProductAPI();\r\n      setProducts(productsResponse);\r\n\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchValue == \"\") {\r\n      setFilteredProducts([]);\r\n    } else {\r\n      doSearch();\r\n    }\r\n  }, [searchValue]);\r\n  const doSearch = async () => {\r\n    const searchResponse = await searchProductAPI(searchValue);\r\n    setFilteredProducts(searchResponse);\r\n  };\r\n\r\n  const StockStatus = (data) => {\r\n    const { sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL } = data.data;\r\n    const totalStock = [sizeXS, sizeS, sizeM, sizeL, sizeXL, sizeXXL];\r\n    if (totalStock.some((s) => s > 0)) {\r\n      return <h1 className={styles.InStock}>In Stock</h1>;\r\n    } else return <h1 className={styles.OutOfStock}>Out Of Stock </h1>;\r\n  };\r\n\r\n  const ProductCard = ({ product }) => {\r\n    return (\r\n      <Link\r\n        to={`/product_detailed/${product.id}`}\r\n        key={product.id}\r\n        className={styles.link}\r\n      >\r\n        <Box\r\n          rounded=\"md\"\r\n          bg=\"white\"\r\n          boxShadow=\"xs\"\r\n          key={product.id}\r\n          d=\"flex\"\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          w=\"95%\"\r\n          flexShrink=\"0\"\r\n          mt=\"3\"\r\n          height=\"115px\"\r\n        >\r\n          {product.productimages.length > 0 ? (\r\n            <img\r\n              src={`${apiRoot}/product-images/min/${product.productimages[0].name}`}\r\n              alt=\"product_image`\"\r\n              className={styles.thumbnailImage}\r\n            />\r\n          ) : (\r\n            <img src={Placeholder} className={styles.thumbnailImage} />\r\n          )}\r\n          <div className={styles.details}>\r\n            <h1 className={styles.cod}>{product.code}</h1>\r\n            <h1 className={styles.price}>{`â‚¹${product.price}`}</h1>\r\n            <StockStatus data={product} />\r\n          </div>\r\n        </Box>{\" \"}\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <IconButton\r\n          borderRadius=\"full\"\r\n          colorScheme=\"blue\"\r\n          ml=\"4\"\r\n          mt=\"2\"\r\n          alignSelf=\"flex-start\"\r\n          icon={<ArrowBackIcon color=\"white\" />}\r\n          onClick={() => history.push(\"/\")}\r\n        />\r\n        {/* <input\r\n          type=\"number\"\r\n          placeholder=\"Search cod here\"\r\n          className={styles.search}\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n        />\r\n        <button className={styles.btnHome} onClick={doSearch}>\r\n          Search\r\n        </button> */}\r\n\r\n        <TabHeader selected=\"products\" />\r\n        <InputGroup\r\n          w=\"90%\"\r\n          mb=\"3\"\r\n          mt=\"2\"\r\n          size=\"lg\"\r\n          backgroundColor=\"white\"\r\n          borderRadius=\"6px\"\r\n        >\r\n          <InputRightElement\r\n            children={\r\n              <IconButton\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"30px\"\r\n                onClick={doSearch}\r\n                icon={<SearchIcon />}\r\n              />\r\n            }\r\n          />\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"search in this store\"\r\n            borderRadius=\"6px\"\r\n            borderColor=\"white\"\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n      {isLoading ? (\r\n        <div className={styles.loaderwraper}>\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#0278ae\"\r\n            height={50}\r\n            width={50}\r\n            visible={isLoading}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div className={styles.container}>\r\n        {searchValue.length < 1 ? (\r\n          <>\r\n            {products.map((product) => (\r\n              <ProductCard product={product} key={product.id} />\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {filteredProducts.map((product) => (\r\n              <ProductCard product={product} key={product.id} />\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div style={{ marginTop: `20px` }} />\r\n      <button\r\n        onClick={() => history.push(\"/admin/product_add\")}\r\n        className={styles.btnFloat}\r\n      >\r\n        +\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","D:\\Abony Price Directory\\price-directory\\src\\pages\\categoryProducts.js",["150","151","152","153"],"D:\\Abony Price Directory\\price-directory\\src\\components\\TableSize.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"154","replacedBy":"162"},{"ruleId":"156","replacedBy":"163"},{"ruleId":"154","replacedBy":"164"},{"ruleId":"156","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":53,"column":6,"nodeType":"168","endLine":53,"endColumn":8,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":57,"column":68,"nodeType":"172","messageId":"173","endLine":57,"endColumn":70},{"ruleId":"170","severity":1,"message":"174","line":67,"column":66,"nodeType":"172","messageId":"173","endLine":67,"endColumn":68},{"ruleId":"170","severity":1,"message":"174","line":68,"column":67,"nodeType":"172","messageId":"173","endLine":68,"endColumn":69},{"ruleId":"158","severity":1,"message":"175","line":97,"column":11,"nodeType":"160","messageId":"161","endLine":97,"endColumn":19},{"ruleId":"158","severity":1,"message":"176","line":155,"column":9,"nodeType":"160","messageId":"161","endLine":155,"endColumn":21},{"ruleId":"170","severity":1,"message":"171","line":156,"column":67,"nodeType":"172","messageId":"173","endLine":156,"endColumn":69},{"ruleId":"177","severity":1,"message":"178","line":231,"column":19,"nodeType":"179","endLine":234,"endColumn":21},{"ruleId":"154","replacedBy":"180"},{"ruleId":"156","replacedBy":"181"},{"ruleId":"158","severity":1,"message":"182","line":12,"column":3,"nodeType":"160","messageId":"161","endLine":12,"endColumn":6},{"ruleId":"158","severity":1,"message":"183","line":15,"column":8,"nodeType":"160","messageId":"161","endLine":15,"endColumn":19},{"ruleId":"158","severity":1,"message":"184","line":16,"column":10,"nodeType":"160","messageId":"161","endLine":16,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":38,"column":21,"nodeType":"172","messageId":"173","endLine":38,"endColumn":23},{"ruleId":"166","severity":1,"message":"185","line":43,"column":6,"nodeType":"168","endLine":43,"endColumn":19,"suggestions":"186"},{"ruleId":"158","severity":1,"message":"187","line":6,"column":16,"nodeType":"160","messageId":"161","endLine":6,"endColumn":22},{"ruleId":"158","severity":1,"message":"188","line":24,"column":3,"nodeType":"160","messageId":"161","endLine":24,"endColumn":15},{"ruleId":"158","severity":1,"message":"189","line":30,"column":3,"nodeType":"160","messageId":"161","endLine":30,"endColumn":9},{"ruleId":"158","severity":1,"message":"190","line":31,"column":3,"nodeType":"160","messageId":"161","endLine":31,"endColumn":8},{"ruleId":"158","severity":1,"message":"191","line":32,"column":3,"nodeType":"160","messageId":"161","endLine":32,"endColumn":8},{"ruleId":"158","severity":1,"message":"192","line":34,"column":3,"nodeType":"160","messageId":"161","endLine":34,"endColumn":13},{"ruleId":"158","severity":1,"message":"193","line":35,"column":3,"nodeType":"160","messageId":"161","endLine":35,"endColumn":14},{"ruleId":"158","severity":1,"message":"194","line":36,"column":3,"nodeType":"160","messageId":"161","endLine":36,"endColumn":18},{"ruleId":"158","severity":1,"message":"195","line":37,"column":3,"nodeType":"160","messageId":"161","endLine":37,"endColumn":20},{"ruleId":"158","severity":1,"message":"196","line":38,"column":3,"nodeType":"160","messageId":"161","endLine":38,"endColumn":20},{"ruleId":"158","severity":1,"message":"197","line":39,"column":3,"nodeType":"160","messageId":"161","endLine":39,"endColumn":21},{"ruleId":"158","severity":1,"message":"198","line":40,"column":3,"nodeType":"160","messageId":"161","endLine":40,"endColumn":21},{"ruleId":"166","severity":1,"message":"199","line":61,"column":6,"nodeType":"168","endLine":61,"endColumn":8,"suggestions":"200"},{"ruleId":"158","severity":1,"message":"201","line":30,"column":3,"nodeType":"160","messageId":"161","endLine":30,"endColumn":9},{"ruleId":"166","severity":1,"message":"202","line":73,"column":6,"nodeType":"168","endLine":73,"endColumn":8,"suggestions":"203"},{"ruleId":"158","severity":1,"message":"204","line":78,"column":11,"nodeType":"160","messageId":"161","endLine":78,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":197,"column":19,"nodeType":"179","endLine":200,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":53,"column":24,"nodeType":"207","messageId":"208","endLine":53,"endColumn":26},{"ruleId":"158","severity":1,"message":"209","line":14,"column":10,"nodeType":"160","messageId":"161","endLine":14,"endColumn":33},{"ruleId":"158","severity":1,"message":"210","line":16,"column":10,"nodeType":"160","messageId":"161","endLine":16,"endColumn":16},{"ruleId":"158","severity":1,"message":"188","line":29,"column":3,"nodeType":"160","messageId":"161","endLine":29,"endColumn":15},{"ruleId":"158","severity":1,"message":"211","line":31,"column":3,"nodeType":"160","messageId":"161","endLine":31,"endColumn":8},{"ruleId":"166","severity":1,"message":"212","line":110,"column":6,"nodeType":"168","endLine":110,"endColumn":8,"suggestions":"213"},{"ruleId":"158","severity":1,"message":"214","line":156,"column":7,"nodeType":"160","messageId":"161","endLine":156,"endColumn":10},{"ruleId":"158","severity":1,"message":"215","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":14},{"ruleId":"158","severity":1,"message":"188","line":19,"column":3,"nodeType":"160","messageId":"161","endLine":19,"endColumn":15},{"ruleId":"158","severity":1,"message":"216","line":23,"column":3,"nodeType":"160","messageId":"161","endLine":23,"endColumn":13},{"ruleId":"158","severity":1,"message":"217","line":24,"column":3,"nodeType":"160","messageId":"161","endLine":24,"endColumn":20},{"ruleId":"166","severity":1,"message":"218","line":76,"column":6,"nodeType":"168","endLine":76,"endColumn":8,"suggestions":"219"},{"ruleId":"158","severity":1,"message":"220","line":85,"column":9,"nodeType":"160","messageId":"161","endLine":85,"endColumn":19},{"ruleId":"221","severity":1,"message":"222","line":285,"column":15,"nodeType":"223","endLine":285,"endColumn":28},{"ruleId":"158","severity":1,"message":"216","line":10,"column":3,"nodeType":"160","messageId":"161","endLine":10,"endColumn":13},{"ruleId":"158","severity":1,"message":"217","line":11,"column":3,"nodeType":"160","messageId":"161","endLine":11,"endColumn":20},{"ruleId":"158","severity":1,"message":"224","line":12,"column":3,"nodeType":"160","messageId":"161","endLine":12,"endColumn":13},{"ruleId":"158","severity":1,"message":"182","line":13,"column":3,"nodeType":"160","messageId":"161","endLine":13,"endColumn":6},{"ruleId":"154","replacedBy":"225"},{"ruleId":"156","replacedBy":"226"},{"ruleId":"205","severity":1,"message":"206","line":71,"column":29,"nodeType":"207","messageId":"208","endLine":71,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":40,"column":21,"nodeType":"172","messageId":"173","endLine":40,"endColumn":23},{"ruleId":"166","severity":1,"message":"185","line":45,"column":6,"nodeType":"168","endLine":45,"endColumn":19,"suggestions":"227"},{"ruleId":"177","severity":1,"message":"178","line":86,"column":13,"nodeType":"179","endLine":86,"endColumn":72},{"ruleId":"158","severity":1,"message":"228","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":17},{"ruleId":"166","severity":1,"message":"229","line":36,"column":6,"nodeType":"168","endLine":36,"endColumn":8,"suggestions":"230"},{"ruleId":"170","severity":1,"message":"171","line":39,"column":21,"nodeType":"172","messageId":"173","endLine":39,"endColumn":23},{"ruleId":"177","severity":1,"message":"178","line":83,"column":13,"nodeType":"179","endLine":83,"endColumn":72},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar",["231"],["232"],["231"],["232"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setOrder'. Either include it or remove the dependency array.","ArrayExpression",["233"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'response' is assigned a value but never used.","'ProductImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["231"],["232"],"'Box' is defined but never used.","'Placeholder' is defined but never used.","'ChakraProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'doSearch'. Either include it or remove the dependency array.",["234"],"'uuidv4' is defined but never used.","'TableCaption' is defined but never used.","'Select' is defined but never used.","'Stack' is defined but never used.","'Image' is defined but never used.","'SimpleGrid' is defined but never used.","'AlertDialog' is defined but never used.","'AlertDialogBody' is defined but never used.","'AlertDialogFooter' is defined but never used.","'AlertDialogHeader' is defined but never used.","'AlertDialogContent' is defined but never used.","'AlertDialogOverlay' is defined but never used.","React Hook useEffect has missing dependencies: 'productId' and 'setProduct'. Either include them or remove the dependency array.",["235"],"'border' is defined but never used.","React Hook useEffect has missing dependencies: 'orderId' and 'setOrder'. Either include them or remove the dependency array.",["236"],"'updateResponse' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'downloadProductImageAPI' is defined but never used.","'saveAs' is defined but never used.","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["237"],"'arr' is assigned a value but never used.","'Loader' is defined but never used.","'InputGroup' is defined but never used.","'InputRightElement' is defined but never used.","React Hook useEffect has a missing dependency: 'setProduct'. Either include it or remove the dependency array.",["238"],"'imageNames' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'IconButton' is defined but never used.",["231"],["232"],["239"],"'TabHeader' is defined but never used.","React Hook useEffect has a missing dependency: 'categoryId'. Either include it or remove the dependency array.",["240"],"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"243","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [setOrder]",{"range":"256","text":"257"},"Update the dependencies array to be: [doSearch, searchValue]",{"range":"258","text":"259"},"Update the dependencies array to be: [productId, setProduct]",{"range":"260","text":"261"},"Update the dependencies array to be: [orderId, setOrder]",{"range":"262","text":"263"},"Update the dependencies array to be: [productId]",{"range":"264","text":"265"},"Update the dependencies array to be: [setProduct]",{"range":"266","text":"267"},{"range":"268","text":"259"},"Update the dependencies array to be: [categoryId]",{"range":"269","text":"270"},[1587,1589],"[setOrder]",[1383,1396],"[doSearch, searchValue]",[1678,1680],"[productId, setProduct]",[2171,2173],"[orderId, setOrder]",[3327,3329],"[productId]",[2112,2114],"[setProduct]",[1342,1355],[1288,1290],"[categoryId]"]